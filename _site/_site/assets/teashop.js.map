{
  "version": 3,
  "sources": ["../../node_modules/svelte/src/version.js", "../../node_modules/svelte/src/internal/disclose-version.js", "../../node_modules/svelte/src/internal/flags/index.js", "../../node_modules/svelte/src/internal/flags/legacy.js", "../../node_modules/svelte/src/constants.js", "../../node_modules/esm-env/dev-fallback.js", "../../node_modules/svelte/src/internal/client/constants.js", "../../node_modules/svelte/src/internal/shared/utils.js", "../../node_modules/svelte/src/internal/client/dom/task.js", "../../node_modules/svelte/src/internal/client/reactivity/equality.js", "../../node_modules/svelte/src/internal/client/errors.js", "../../node_modules/svelte/src/internal/shared/warnings.js", "../../node_modules/svelte/src/internal/shared/clone.js", "../../node_modules/svelte/src/internal/client/dev/tracing.js", "../../node_modules/svelte/src/internal/client/proxy.js", "../../node_modules/svelte/src/internal/client/reactivity/sources.js", "../../node_modules/svelte/src/internal/client/reactivity/deriveds.js", "../../node_modules/svelte/src/internal/client/warnings.js", "../../node_modules/svelte/src/internal/client/dom/hydration.js", "../../node_modules/svelte/src/internal/client/dev/equality.js", "../../node_modules/svelte/src/internal/client/dom/operations.js", "../../node_modules/svelte/src/internal/client/runtime.js", "../../node_modules/svelte/src/internal/client/reactivity/effects.js", "../../node_modules/svelte/src/internal/client/dev/ownership.js", "../../node_modules/svelte/src/internal/shared/errors.js", "../../node_modules/svelte/src/internal/client/context.js", "../../node_modules/svelte/src/utils.js", "../../node_modules/svelte/src/internal/client/dev/elements.js", "../../node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js", "../../node_modules/svelte/src/internal/client/dom/elements/events.js", "../../node_modules/svelte/src/internal/client/dom/blocks/svelte-head.js", "../../node_modules/svelte/src/internal/client/dom/reconciler.js", "../../node_modules/svelte/src/internal/client/dom/template.js", "../../node_modules/svelte/src/internal/client/render.js", "../../node_modules/svelte/src/internal/client/dev/legacy.js", "../../node_modules/svelte/src/internal/client/dom/blocks/if.js", "../../node_modules/svelte/src/internal/client/dom/blocks/each.js", "../../node_modules/svelte/src/internal/shared/attributes.js", "../../node_modules/svelte/src/internal/client/dom/elements/style.js", "../../node_modules/svelte/src/internal/client/dom/elements/attributes.js", "../../node_modules/svelte/src/internal/client/dom/elements/bindings/props.js", "../../node_modules/svelte/src/internal/client/dom/elements/bindings/this.js", "../../node_modules/svelte/src/internal/client/dom/legacy/lifecycle.js", "../../node_modules/svelte/src/index-client.js", "../../node_modules/svelte/src/internal/client/reactivity/store.js", "../../node_modules/svelte/src/internal/client/reactivity/props.js", "../../node_modules/svelte/src/internal/client/validate.js", "../../node_modules/svelte/src/legacy/legacy-client.js", "../../node_modules/svelte/src/internal/client/dom/elements/custom-element.js", "../../node_modules/svelte/src/internal/client/dev/console-log.js", "../../src/svelte/config.js", "../../src/svelte/components/GardenPlot.svelte", "../../src/svelte/components/Teapot.svelte", "../../src/svelte/components/Shop.svelte", "../../src/svelte/components/Teashop.svelte", "../../src/svelte/main.js"],
  "sourcesContent": ["// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.25.2';\nexport const PUBLIC_VERSION = '5';\n", "import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n", "export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n", "import { enable_legacy_mode_flag } from './index.js';\n\nenable_legacy_mode_flag();\n", "export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n", "const node_env = globalThis.process?.env?.NODE_ENV;\nexport default node_env && !node_env.toLowerCase().startsWith('prod');\n", "export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\nexport const EFFECT_IS_UPDATING = 1 << 21;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n", "// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\nexport var is_extensible = Object.isExtensible;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n", "import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nconst request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\n/** @type {Array<() => void>} */\nlet micro_tasks = [];\n\n/** @type {Array<() => void>} */\nlet idle_tasks = [];\n\nfunction run_micro_tasks() {\n\tvar tasks = micro_tasks;\n\tmicro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction run_idle_tasks() {\n\tvar tasks = idle_tasks;\n\tidle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (micro_tasks.length === 0) {\n\t\tqueueMicrotask(run_micro_tasks);\n\t}\n\n\tmicro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (idle_tasks.length === 0) {\n\t\trequest_idle_callback(run_idle_tasks);\n\t}\n\n\tidle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (micro_tasks.length > 0) {\n\t\trun_micro_tasks();\n\t}\n\n\tif (idle_tasks.length > 0) {\n\t\trun_idle_tasks();\n\t}\n}\n", "/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * `<svelte:element this=\"%tag%\">` is a void element \u2014 it cannot have content\n * @param {string} tag\n */\nexport function dynamic_void_element_content(tag) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] dynamic_void_element_content\\n%c\\`<svelte:element this=\"${tag}\">\\` is a void element \u2014 it cannot have content\\nhttps://svelte.dev/e/dynamic_void_element_content`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/dynamic_void_element_content`);\n\t}\n}\n\n/**\n * The following properties cannot be cloned with `$state.snapshot` \u2014 the return value contains the originals:\n * \n * %properties%\n * @param {string | undefined | null} [properties]\n */\nexport function state_snapshot_uncloneable(properties) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_snapshot_uncloneable\\n%c${properties\n\t\t\t? `The following properties cannot be cloned with \\`$state.snapshot\\` \u2014 the return value contains the originals:\n\n${properties}`\n\t\t\t: 'Value cannot be cloned with `$state.snapshot` \u2014 the original value was returned'}\\nhttps://svelte.dev/e/state_snapshot_uncloneable`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/state_snapshot_uncloneable`);\n\t}\n}", "/** @import { Snapshot } from './types' */\nimport { DEV } from 'esm-env';\nimport * as w from './warnings.js';\nimport { get_prototype_of, is_array, object_prototype } from './utils.js';\n\n/**\n * In dev, we keep track of which properties could not be cloned. In prod\n * we don't bother, but we keep a dummy array around so that the\n * signature stays the same\n * @type {string[]}\n */\nconst empty = [];\n\n/**\n * @template T\n * @param {T} value\n * @param {boolean} [skip_warning]\n * @returns {Snapshot<T>}\n */\nexport function snapshot(value, skip_warning = false) {\n\tif (DEV && !skip_warning) {\n\t\t/** @type {string[]} */\n\t\tconst paths = [];\n\n\t\tconst copy = clone(value, new Map(), '', paths);\n\t\tif (paths.length === 1 && paths[0] === '') {\n\t\t\t// value could not be cloned\n\t\t\tw.state_snapshot_uncloneable();\n\t\t} else if (paths.length > 0) {\n\t\t\t// some properties could not be cloned\n\t\t\tconst slice = paths.length > 10 ? paths.slice(0, 7) : paths.slice(0, 10);\n\t\t\tconst excess = paths.length - slice.length;\n\n\t\t\tlet uncloned = slice.map((path) => `- <value>${path}`).join('\\n');\n\t\t\tif (excess > 0) uncloned += `\\n- ...and ${excess} more`;\n\n\t\t\tw.state_snapshot_uncloneable(uncloned);\n\t\t}\n\n\t\treturn copy;\n\t}\n\n\treturn clone(value, new Map(), '', empty);\n}\n\n/**\n * @template T\n * @param {T} value\n * @param {Map<T, Snapshot<T>>} cloned\n * @param {string} path\n * @param {string[]} paths\n * @param {null | T} original The original value, if `value` was produced from a `toJSON` call\n * @returns {Snapshot<T>}\n */\nfunction clone(value, cloned, path, paths, original = null) {\n\tif (typeof value === 'object' && value !== null) {\n\t\tvar unwrapped = cloned.get(value);\n\t\tif (unwrapped !== undefined) return unwrapped;\n\n\t\tif (value instanceof Map) return /** @type {Snapshot<T>} */ (new Map(value));\n\t\tif (value instanceof Set) return /** @type {Snapshot<T>} */ (new Set(value));\n\n\t\tif (is_array(value)) {\n\t\t\tvar copy = /** @type {Snapshot<any>} */ (Array(value.length));\n\t\t\tcloned.set(value, copy);\n\n\t\t\tif (original !== null) {\n\t\t\t\tcloned.set(original, copy);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < value.length; i += 1) {\n\t\t\t\tvar element = value[i];\n\t\t\t\tif (i in value) {\n\t\t\t\t\tcopy[i] = clone(element, cloned, DEV ? `${path}[${i}]` : path, paths);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn copy;\n\t\t}\n\n\t\tif (get_prototype_of(value) === object_prototype) {\n\t\t\t/** @type {Snapshot<any>} */\n\t\t\tcopy = {};\n\t\t\tcloned.set(value, copy);\n\n\t\t\tif (original !== null) {\n\t\t\t\tcloned.set(original, copy);\n\t\t\t}\n\n\t\t\tfor (var key in value) {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcopy[key] = clone(value[key], cloned, DEV ? `${path}.${key}` : path, paths);\n\t\t\t}\n\n\t\t\treturn copy;\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\n\t\t}\n\n\t\tif (typeof (/** @type {T & { toJSON?: any } } */ (value).toJSON) === 'function') {\n\t\t\treturn clone(\n\t\t\t\t/** @type {T & { toJSON(): any } } */ (value).toJSON(),\n\t\t\t\tcloned,\n\t\t\t\tDEV ? `${path}.toJSON()` : path,\n\t\t\t\tpaths,\n\t\t\t\t// Associate the instance with the toJSON clone\n\t\t\t\tvalue\n\t\t\t);\n\t\t}\n\t}\n\n\tif (value instanceof EventTarget) {\n\t\t// can't be cloned\n\t\treturn /** @type {Snapshot<T>} */ (value);\n\t}\n\n\ttry {\n\t\treturn /** @type {Snapshot<T>} */ (structuredClone(value));\n\t} catch (e) {\n\t\tif (DEV) {\n\t\t\tpaths.push(path);\n\t\t}\n\n\t\treturn /** @type {Snapshot<T>} */ (value);\n\t}\n}\n", "/** @import { Derived, Reaction, Signal, Value } from '#client' */\nimport { UNINITIALIZED } from '../../../constants.js';\nimport { snapshot } from '../../shared/clone.js';\nimport { define_property } from '../../shared/utils.js';\nimport { DERIVED, STATE_SYMBOL } from '../constants.js';\nimport { effect_tracking } from '../reactivity/effects.js';\nimport { active_reaction, captured_signals, set_captured_signals, untrack } from '../runtime.js';\n\n/** @type { any } */\nexport let tracing_expressions = null;\n\n/**\n * @param { Value } signal\n * @param { { read: Error[] } } [entry]\n */\nfunction log_entry(signal, entry) {\n\tconst debug = signal.debug;\n\tconst value = signal.trace_need_increase ? signal.trace_v : signal.v;\n\n\tif (value === UNINITIALIZED) {\n\t\treturn;\n\t}\n\n\tif (debug) {\n\t\tvar previous_captured_signals = captured_signals;\n\t\tvar captured = new Set();\n\t\tset_captured_signals(captured);\n\t\ttry {\n\t\t\tuntrack(() => {\n\t\t\t\tdebug();\n\t\t\t});\n\t\t} finally {\n\t\t\tset_captured_signals(previous_captured_signals);\n\t\t}\n\t\tif (captured.size > 0) {\n\t\t\tfor (const dep of captured) {\n\t\t\t\tlog_entry(dep);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst type = (signal.f & DERIVED) !== 0 ? '$derived' : '$state';\n\tconst current_reaction = /** @type {Reaction} */ (active_reaction);\n\tconst dirty = signal.wv > current_reaction.wv || current_reaction.wv === 0;\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupCollapsed(\n\t\t`%c${type}`,\n\t\tdirty ? 'color: CornflowerBlue; font-weight: bold' : 'color: grey; font-weight: bold',\n\t\ttypeof value === 'object' && value !== null && STATE_SYMBOL in value\n\t\t\t? snapshot(value, true)\n\t\t\t: value\n\t);\n\n\tif (type === '$derived') {\n\t\tconst deps = new Set(/** @type {Derived} */ (signal).deps);\n\t\tfor (const dep of deps) {\n\t\t\tlog_entry(dep);\n\t\t}\n\t}\n\n\tif (signal.created) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.created);\n\t}\n\n\tif (signal.updated) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.log(signal.updated);\n\t}\n\n\tconst read = entry?.read;\n\n\tif (read && read.length > 0) {\n\t\tfor (var stack of read) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(stack);\n\t\t}\n\t}\n\n\t// eslint-disable-next-line no-console\n\tconsole.groupEnd();\n}\n\n/**\n * @template T\n * @param {() => string} label\n * @param {() => T} fn\n */\nexport function trace(label, fn) {\n\tvar previously_tracing_expressions = tracing_expressions;\n\ttry {\n\t\ttracing_expressions = { entries: new Map(), reaction: active_reaction };\n\n\t\tvar start = performance.now();\n\t\tvar value = fn();\n\t\tvar time = (performance.now() - start).toFixed(2);\n\n\t\tif (!effect_tracking()) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cran outside of an effect (${time}ms)`, 'color: grey');\n\t\t} else if (tracing_expressions.entries.size === 0) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log(`${label()} %cno reactive dependencies (${time}ms)`, 'color: grey');\n\t\t} else {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.group(`${label()} %c(${time}ms)`, 'color: grey');\n\n\t\t\tvar entries = tracing_expressions.entries;\n\n\t\t\ttracing_expressions = null;\n\n\t\t\tfor (const [signal, entry] of entries) {\n\t\t\t\tlog_entry(signal, entry);\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.groupEnd();\n\t\t}\n\n\t\tif (previously_tracing_expressions !== null && tracing_expressions !== null) {\n\t\t\tfor (const [signal, entry] of tracing_expressions.entries) {\n\t\t\t\tvar prev_entry = previously_tracing_expressions.get(signal);\n\n\t\t\t\tif (prev_entry === undefined) {\n\t\t\t\t\tpreviously_tracing_expressions.set(signal, entry);\n\t\t\t\t} else {\n\t\t\t\t\tprev_entry.read.push(...entry.read);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t} finally {\n\t\ttracing_expressions = previously_tracing_expressions;\n\t}\n}\n\n/**\n * @param {string} label\n */\nexport function get_stack(label) {\n\tlet error = Error();\n\tconst stack = error.stack;\n\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = ['\\n'];\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\n\t\t\tif (line === 'Error') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (line.includes('validate_each_keys')) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\n\t\tif (new_lines.length === 1) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\n\t\tdefine_property(error, 'name', {\n\t\t\t// 'Error' suffix is required for stack traces to be rendered properly\n\t\t\tvalue: `${label}Error`\n\t\t});\n\t}\n\treturn error;\n}\n", "/** @import { ProxyMetadata, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect, active_reaction, set_active_reaction } from './runtime.js';\nimport { component_context } from './context.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { state as source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/** @type {ProxyMetadata | null} */\nvar parent_metadata = null;\n\n/**\n * @template T\n * @param {T} value\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, prev) {\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tvar stack = DEV && tracing_mode_flag ? get_stack('CreatedAt') : null;\n\tvar reaction = active_reaction;\n\n\t/**\n\t * @template T\n\t * @param {() => T} fn\n\t */\n\tvar with_parent = (fn) => {\n\t\tvar previous_reaction = active_reaction;\n\t\tset_active_reaction(reaction);\n\n\t\t/** @type {T} */\n\t\tvar result;\n\n\t\tif (DEV) {\n\t\t\tvar previous_metadata = parent_metadata;\n\t\t\tparent_metadata = metadata;\n\t\t\tresult = fn();\n\t\t\tparent_metadata = previous_metadata;\n\t\t} else {\n\t\t\tresult = fn();\n\t\t}\n\n\t\tset_active_reaction(previous_reaction);\n\t\treturn result;\n\t};\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent: parent_metadata,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent_metadata === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object \u2014 which we avoid, so that state can be forked \u2014 we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = with_parent(() => source(descriptor.value, stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(descriptor.value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\tprop,\n\t\t\t\t\t\twith_parent(() => source(UNINITIALIZED, stack))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = with_parent(() => source(proxy(exists ? target[prop] : UNINITIALIZED), stack));\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = with_parent(() => source(has ? proxy(target[prop]) : UNINITIALIZED, stack));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = with_parent(() => source(UNINITIALIZED, stack));\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = with_parent(() => source(undefined, stack));\n\t\t\t\t\tset(\n\t\t\t\t\t\ts,\n\t\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t\t);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(\n\t\t\t\t\ts,\n\t\t\t\t\twith_parent(() => proxy(value))\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\ttry {\n\t\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\t\treturn value[STATE_SYMBOL];\n\t\t}\n\t} catch {\n\t\t// the above if check can throw an error if the value in question\n\t\t// is the contentWindow of an iframe on another domain, in which\n\t\t// case we want to just return the value (because it's definitely\n\t\t// not a proxied value) so we don't break any JavaScript interacting\n\t\t// with that iframe (such as various payment companies client side\n\t\t// JavaScript libraries interacting with their iframes on the same\n\t\t// domain)\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n", "/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\treaction_sources,\n\tset_reaction_sources,\n\tcheck_dirtiness,\n\tuntracking,\n\tis_destroying_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_IS_UPDATING\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\nimport { proxy } from '../proxy.js';\n\nexport let inspect_effects = new Set();\nexport const old_values = new Map();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\n// TODO rename this to `state` throughout the codebase\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n */\nexport function state(v, stack) {\n\tconst s = source(v, stack);\n\n\tpush_reaction_value(s);\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @param {boolean} [should_proxy]\n * @returns {V}\n */\nexport function set(source, value, should_proxy = false) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t!reaction_sources?.includes(source)\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\tlet new_value = should_proxy ? proxy(value, source) : value;\n\n\treturn internal_set(source, new_value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\n\t\tif (is_destroying_effect) {\n\t\t\told_values.set(source, value);\n\t\t} else {\n\t\t\told_values.set(source, old_value);\n\t\t}\n\n\t\tsource.v = value;\n\t\tsource.wv = increment_write_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\n\t\t\tfor (const effect of inspects) {\n\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t}\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n", "/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport { CLEAN, DERIVED, DIRTY, EFFECT_HAS_DERIVED, MAYBE_DIRTY, UNOWNED } from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect,\n\tpush_reaction_value\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\nexport function user_derived(fn) {\n\tconst d = derived(fn);\n\n\tpush_reaction_value(d);\n\n\treturn d;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nfunction execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\nvar bold = 'font-weight: bold';\nvar normal = 'font-weight: normal';\n\n/**\n * Assignment to `%property%` property (%location%) will evaluate to the right-hand side, not the value of `%property%` following the assignment. This may result in unexpected behaviour.\n * @param {string} property\n * @param {string} location\n */\nexport function assignment_value_stale(property, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] assignment_value_stale\\n%cAssignment to \\`${property}\\` property (${location}) will evaluate to the right-hand side, not the value of \\`${property}\\` following the assignment. This may result in unexpected behaviour.\\nhttps://svelte.dev/e/assignment_value_stale`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/assignment_value_stale`);\n\t}\n}\n\n/**\n * `%binding%` (%location%) is binding to a non-reactive property\n * @param {string} binding\n * @param {string | undefined | null} [location]\n */\nexport function binding_property_non_reactive(binding, location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] binding_property_non_reactive\\n%c${location ? `\\`${binding}\\` (${location}) is binding to a non-reactive property` : `\\`${binding}\\` is binding to a non-reactive property`}\\nhttps://svelte.dev/e/binding_property_non_reactive`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/binding_property_non_reactive`);\n\t}\n}\n\n/**\n * Your `console.%method%` contained `$state` proxies. Consider using `$inspect(...)` or `$state.snapshot(...)` instead\n * @param {string} method\n */\nexport function console_log_state(method) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] console_log_state\\n%cYour \\`console.${method}\\` contained \\`$state\\` proxies. Consider using \\`$inspect(...)\\` or \\`$state.snapshot(...)\\` instead\\nhttps://svelte.dev/e/console_log_state`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/console_log_state`);\n\t}\n}\n\n/**\n * %handler% should be a function. Did you mean to %suggestion%?\n * @param {string} handler\n * @param {string} suggestion\n */\nexport function event_handler_invalid(handler, suggestion) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] event_handler_invalid\\n%c${handler} should be a function. Did you mean to ${suggestion}?\\nhttps://svelte.dev/e/event_handler_invalid`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/event_handler_invalid`);\n\t}\n}\n\n/**\n * The `%attribute%` attribute on `%html%` changed its value between server and client renders. The client value, `%value%`, will be ignored in favour of the server value\n * @param {string} attribute\n * @param {string} html\n * @param {string} value\n */\nexport function hydration_attribute_changed(attribute, html, value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_attribute_changed\\n%cThe \\`${attribute}\\` attribute on \\`${html}\\` changed its value between server and client renders. The client value, \\`${value}\\`, will be ignored in favour of the server value\\nhttps://svelte.dev/e/hydration_attribute_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_attribute_changed`);\n\t}\n}\n\n/**\n * The value of an `{@html ...}` block %location% changed between server and client renders. The client value will be ignored in favour of the server value\n * @param {string | undefined | null} [location]\n */\nexport function hydration_html_changed(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_html_changed\\n%c${location ? `The value of an \\`{@html ...}\\` block ${location} changed between server and client renders. The client value will be ignored in favour of the server value` : 'The value of an `{@html ...}` block changed between server and client renders. The client value will be ignored in favour of the server value'}\\nhttps://svelte.dev/e/hydration_html_changed`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_html_changed`);\n\t}\n}\n\n/**\n * Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near %location%\n * @param {string | undefined | null} [location]\n */\nexport function hydration_mismatch(location) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] hydration_mismatch\\n%c${location ? `Hydration failed because the initial UI does not match what was rendered on the server. The error occurred near ${location}` : 'Hydration failed because the initial UI does not match what was rendered on the server'}\\nhttps://svelte.dev/e/hydration_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/hydration_mismatch`);\n\t}\n}\n\n/**\n * The `render` function passed to `createRawSnippet` should return HTML for a single element\n */\nexport function invalid_raw_snippet_render() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] invalid_raw_snippet_render\\n%cThe \\`render\\` function passed to \\`createRawSnippet\\` should return HTML for a single element\\nhttps://svelte.dev/e/invalid_raw_snippet_render`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/invalid_raw_snippet_render`);\n\t}\n}\n\n/**\n * Detected a migrated `$:` reactive block in `%filename%` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an `$effect`.\n * @param {string} filename\n */\nexport function legacy_recursive_reactive_block(filename) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] legacy_recursive_reactive_block\\n%cDetected a migrated \\`$:\\` reactive block in \\`${filename}\\` that both accesses and updates the same reactive value. This may cause recursive updates when converted to an \\`$effect\\`.\\nhttps://svelte.dev/e/legacy_recursive_reactive_block`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/legacy_recursive_reactive_block`);\n\t}\n}\n\n/**\n * Tried to unmount a component that was not mounted\n */\nexport function lifecycle_double_unmount() {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] lifecycle_double_unmount\\n%cTried to unmount a component that was not mounted\\nhttps://svelte.dev/e/lifecycle_double_unmount`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/lifecycle_double_unmount`);\n\t}\n}\n\n/**\n * %parent% passed a value to %child% with `bind:`, but the value is owned by %owner%. Consider creating a binding between %owner% and %parent%\n * @param {string} parent\n * @param {string} child\n * @param {string} owner\n */\nexport function ownership_invalid_binding(parent, child, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_binding\\n%c${parent} passed a value to ${child} with \\`bind:\\`, but the value is owned by ${owner}. Consider creating a binding between ${owner} and ${parent}\\nhttps://svelte.dev/e/ownership_invalid_binding`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_binding`);\n\t}\n}\n\n/**\n * %component% mutated a value owned by %owner%. This is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead\n * @param {string | undefined | null} [component]\n * @param {string | undefined | null} [owner]\n */\nexport function ownership_invalid_mutation(component, owner) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] ownership_invalid_mutation\\n%c${component ? `${component} mutated a value owned by ${owner}. This is strongly discouraged. Consider passing values to child components with \\`bind:\\`, or use a callback instead` : 'Mutating a value outside the component that created it is strongly discouraged. Consider passing values to child components with `bind:`, or use a callback instead'}\\nhttps://svelte.dev/e/ownership_invalid_mutation`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/ownership_invalid_mutation`);\n\t}\n}\n\n/**\n * Reactive `$state(...)` proxies and the values they proxy have different identities. Because of this, comparisons with `%operator%` will produce unexpected results\n * @param {string} operator\n */\nexport function state_proxy_equality_mismatch(operator) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] state_proxy_equality_mismatch\\n%cReactive \\`$state(...)\\` proxies and the values they proxy have different identities. Because of this, comparisons with \\`${operator}\\` will produce unexpected results\\nhttps://svelte.dev/e/state_proxy_equality_mismatch`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/state_proxy_equality_mismatch`);\n\t}\n}\n\n/**\n * The `slide` transition does not work correctly for elements with `display: %value%`\n * @param {string} value\n */\nexport function transition_slide_display(value) {\n\tif (DEV) {\n\t\tconsole.warn(`%c[svelte] transition_slide_display\\n%cThe \\`slide\\` transition does not work correctly for elements with \\`display: ${value}\\`\\nhttps://svelte.dev/e/transition_slide_display`, bold, normal);\n\t} else {\n\t\tconsole.warn(`https://svelte.dev/e/transition_slide_display`);\n\t}\n}", "/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n", "import * as w from '../warnings.js';\nimport { get_proxied_value } from '../proxy.js';\n\nexport function init_array_prototype_warnings() {\n\tconst array_prototype = Array.prototype;\n\t// The REPL ends up here over and over, and this prevents it from adding more and more patches\n\t// of the same kind to the prototype, which would slow down everything over time.\n\t// @ts-expect-error\n\tconst cleanup = Array.__svelte_cleanup;\n\tif (cleanup) {\n\t\tcleanup();\n\t}\n\n\tconst { indexOf, lastIndexOf, includes } = array_prototype;\n\n\tarray_prototype.indexOf = function (item, from_index) {\n\t\tconst index = indexOf.call(this, item, from_index);\n\n\t\tif (index === -1) {\n\t\t\tfor (let i = from_index ?? 0; i < this.length; i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.indexOf(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.lastIndexOf = function (item, from_index) {\n\t\t// we need to specify this.length - 1 because it's probably using something like\n\t\t// `arguments` inside so passing undefined is different from not passing anything\n\t\tconst index = lastIndexOf.call(this, item, from_index ?? this.length - 1);\n\n\t\tif (index === -1) {\n\t\t\tfor (let i = 0; i <= (from_index ?? this.length - 1); i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.lastIndexOf(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t};\n\n\tarray_prototype.includes = function (item, from_index) {\n\t\tconst has = includes.call(this, item, from_index);\n\n\t\tif (!has) {\n\t\t\tfor (let i = 0; i < this.length; i += 1) {\n\t\t\t\tif (get_proxied_value(this[i]) === item) {\n\t\t\t\t\tw.state_proxy_equality_mismatch('array.includes(...)');\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn has;\n\t};\n\n\t// @ts-expect-error\n\tArray.__svelte_cleanup = () => {\n\t\tarray_prototype.indexOf = indexOf;\n\t\tarray_prototype.lastIndexOf = lastIndexOf;\n\t\tarray_prototype.includes = includes;\n\t};\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function strict_equals(a, b, equal = true) {\n\t// try-catch needed because this tries to read properties of `a` and `b`,\n\t// which could be disallowed for example in a secure context\n\ttry {\n\t\tif ((a === b) !== (get_proxied_value(a) === get_proxied_value(b))) {\n\t\t\tw.state_proxy_equality_mismatch(equal ? '===' : '!==');\n\t\t}\n\t} catch {}\n\n\treturn (a === b) === equal;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n * @param {boolean} equal\n * @returns {boolean}\n */\nexport function equals(a, b, equal = true) {\n\tif ((a == b) !== (get_proxied_value(a) == get_proxied_value(b))) {\n\t\tw.state_proxy_equality_mismatch(equal ? '==' : '!=');\n\t}\n\n\treturn (a == b) === equal;\n}\n", "/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor, is_extensible } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {boolean} */\nexport var is_firefox;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\tis_firefox = /Firefox/.test(navigator.userAgent);\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\tvar text_prototype = Text.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\tif (is_extensible(element_prototype)) {\n\t\t// the following assignments improve perf of lookups on DOM nodes\n\t\t// @ts-expect-error\n\t\telement_prototype.__click = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__className = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__attributes = null;\n\t\t// @ts-expect-error\n\t\telement_prototype.__style = undefined;\n\t\t// @ts-expect-error\n\t\telement_prototype.__e = undefined;\n\t}\n\n\tif (is_extensible(text_prototype)) {\n\t\t// @ts-expect-error\n\t\ttext_prototype.__t = undefined;\n\t}\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate \u2014 we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate \u2014 we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n", "/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT,\n\tEFFECT_IS_UPDATING\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set, old_values } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\nimport { is_firefox } from './dom/operations.js';\n\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nlet is_throwing_error = false;\n\nlet is_flushing = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nlet is_updating_effect = false;\n\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a reaction, reading and writing\n * them should not cause a re-run\n * @type {null | Source[]}\n */\nexport let reaction_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_reaction_sources(sources) {\n\treaction_sources = sources;\n}\n\n/** @param {Value} value */\nexport function push_reaction_value(value) {\n\tif (active_reaction !== null && active_reaction.f & EFFECT_IS_UPDATING) {\n\t\tif (reaction_sources === null) {\n\t\t\tset_reaction_sources([value]);\n\t\t} else {\n\t\t\treaction_sources.push(value);\n\t\t}\n\t}\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed \u2014 we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nlet new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tvar derived = /** @type {Derived} */ (reaction);\n\t\t\t\tvar parent = derived.parent;\n\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(derived)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(derived);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\tderived.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t\t// If the unowned derived is now fully connected to the graph again (it's unowned and reconnected, has a parent\n\t\t\t\t// and the parent is not unowned), then we can mark it as connected again, removing the need for the unowned\n\t\t\t\t// flag\n\t\t\t\tif (is_unowned_connected && parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t\t\tderived.f ^= UNOWNED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = is_firefox ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {boolean} [root]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, root = true) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\n\t\tif (reaction_sources?.includes(signal)) continue;\n\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(/** @type {Derived} */ (reaction), effect, false);\n\t\t} else if (effect === reaction) {\n\t\t\tif (root) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar previous_reaction_sources = reaction_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 && (untracking || !is_updating_effect || active_reaction === null);\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\n\treaction_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\treaction.f |= EFFECT_IS_UPDATING;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t!untracking &&\n\t\t\tdeps !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\n\t\t\tif (untracked_writes !== null) {\n\t\t\t\tif (previous_untracked_writes === null) {\n\t\t\t\t\tprevious_untracked_writes = untracked_writes;\n\t\t\t\t} else {\n\t\t\t\t\tprevious_untracked_writes.push(.../** @type {Source[]} */ (untracked_writes));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\treaction_sources = previous_reaction_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\n\t\treaction.f ^= EFFECT_IS_UPDATING;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\tvar was_updating_effect = is_updating_effect;\n\n\tactive_effect = effect;\n\tis_updating_effect = true;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tis_updating_effect = was_updating_effect;\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\ttry {\n\t\te.effect_update_depth_exceeded();\n\t} catch (error) {\n\t\tif (DEV) {\n\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\tdefine_property(error, 'stack', {\n\t\t\t\tvalue: ''\n\t\t\t});\n\t\t}\n\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t// if there's an effect available from when it was last scheduled\n\t\tif (last_scheduled_effect !== null) {\n\t\t\tif (DEV) {\n\t\t\t\ttry {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t}\n\t\t} else {\n\t\t\tif (DEV) {\n\t\t\t\tlog_effect_stack();\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nfunction flush_queued_root_effects() {\n\tvar was_updating_effect = is_updating_effect;\n\n\ttry {\n\t\tvar flush_count = 0;\n\t\tis_updating_effect = true;\n\n\t\twhile (queued_root_effects.length > 0) {\n\t\t\tif (flush_count++ > 1000) {\n\t\t\t\tinfinite_loop_guard();\n\t\t\t}\n\n\t\t\tvar root_effects = queued_root_effects;\n\t\t\tvar length = root_effects.length;\n\n\t\t\tqueued_root_effects = [];\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar collected_effects = process_effects(root_effects[i]);\n\t\t\t\tflush_queued_effects(collected_effects);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tis_flushing = false;\n\t\tis_updating_effect = was_updating_effect;\n\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t\told_values.clear();\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (!is_flushing) {\n\t\tis_flushing = true;\n\t\tqueueMicrotask(flush_queued_root_effects);\n\t}\n\n\tvar effect = (last_scheduled_effect = signal);\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} root\n * @returns {Effect[]}\n */\nfunction process_effects(root) {\n\t/** @type {Effect[]} */\n\tvar effects = [];\n\n\t/** @type {Effect | null} */\n\tvar effect = root;\n\n\twhile (effect !== null) {\n\t\tvar flags = effect.f;\n\t\tvar is_branch = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(effect);\n\t\t\t} else if (is_branch) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t} else {\n\t\t\t\t// Ensure we set the effect to be the active reaction\n\t\t\t\t// to ensure that unowned deriveds are correctly tracked\n\t\t\t\t// because we're flushing the current effect\n\t\t\t\tvar previous_active_reaction = active_reaction;\n\t\t\t\ttry {\n\t\t\t\t\tactive_reaction = effect;\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t\t} finally {\n\t\t\t\t\tactive_reaction = previous_active_reaction;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {Effect | null} */\n\t\t\tvar child = effect.first;\n\n\t\t\tif (child !== null) {\n\t\t\t\teffect = child;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tvar parent = effect.parent;\n\t\teffect = effect.next;\n\n\t\twhile (effect === null && parent !== null) {\n\t\t\teffect = parent.next;\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\treturn effects;\n}\n\n/**\n * Synchronously flush any pending updates.\n * Returns void if no callback is provided, otherwise returns the result of calling the callback.\n * @template [T=void]\n * @param {(() => T) | undefined} [fn]\n * @returns {T}\n */\nexport function flushSync(fn) {\n\tvar result;\n\n\tif (fn) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tresult = fn();\n\t}\n\n\tflush_tasks();\n\n\twhile (queued_root_effects.length > 0) {\n\t\tis_flushing = true;\n\t\tflush_queued_root_effects();\n\t\tflush_tasks();\n\t}\n\n\treturn /** @type {T} */ (result);\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flushSync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflushSync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (!reaction_sources?.includes(signal)) {\n\t\t\tvar deps = active_reaction.deps;\n\t\t\tif (signal.rv < read_version) {\n\t\t\t\tsignal.rv = read_version;\n\t\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\t\tskipped_deps++;\n\t\t\t\t} else if (new_deps === null) {\n\t\t\t\t\tnew_deps = [signal];\n\t\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t\t// we don't have duplicates\n\t\t\t\t\tnew_deps.push(signal);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\tif (is_destroying_effect && old_values.has(signal)) {\n\t\treturn old_values.get(signal);\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nfunction capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_signal_status,\n\tuntrack,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar parent = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent !== null && (parent.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent = parent.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\ttry {\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && push) {\n\t\tif (parent !== null) {\n\t\t\tpush_effect(effect, parent);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\n\t\tif ((effect.f & ROOT_EFFECT) !== 0) {\n\t\t\t// this is now an independent root\n\t\t\teffect.parent = null;\n\t\t} else {\n\t\t\tdestroy_effect(effect, remove_dom);\n\t\t}\n\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n", "/** @import { ProxyMetadata } from '#client' */\n/** @typedef {{ file: string, line: number, column: number }} Location */\n\nimport { STATE_SYMBOL_METADATA } from '../constants.js';\nimport { render_effect, user_pre_effect } from '../reactivity/effects.js';\nimport { dev_current_component_function } from '../context.js';\nimport { get_prototype_of } from '../../shared/utils.js';\nimport * as w from '../warnings.js';\nimport { FILENAME, UNINITIALIZED } from '../../../constants.js';\n\n/** @type {Record<string, Array<{ start: Location, end: Location, component: Function }>>} */\nconst boundaries = {};\n\nconst chrome_pattern = /at (?:.+ \\()?(.+):(\\d+):(\\d+)\\)?$/;\nconst firefox_pattern = /@(.+):(\\d+):(\\d+)$/;\n\nfunction get_stack() {\n\tconst stack = new Error().stack;\n\tif (!stack) return null;\n\n\tconst entries = [];\n\n\tfor (const line of stack.split('\\n')) {\n\t\tlet match = chrome_pattern.exec(line) ?? firefox_pattern.exec(line);\n\n\t\tif (match) {\n\t\t\tentries.push({\n\t\t\t\tfile: match[1],\n\t\t\t\tline: +match[2],\n\t\t\t\tcolumn: +match[3]\n\t\t\t});\n\t\t}\n\t}\n\n\treturn entries;\n}\n\n/**\n * Determines which `.svelte` component is responsible for a given state change\n * @returns {Function | null}\n */\nexport function get_component() {\n\t// first 4 lines are svelte internals; adjust this number if we change the internal call stack\n\tconst stack = get_stack()?.slice(4);\n\tif (!stack) return null;\n\n\tfor (let i = 0; i < stack.length; i++) {\n\t\tconst entry = stack[i];\n\t\tconst modules = boundaries[entry.file];\n\t\tif (!modules) {\n\t\t\t// If the first entry is not a component, that means the modification very likely happened\n\t\t\t// within a .svelte.js file, possibly triggered by a component. Since these files are not part\n\t\t\t// of the bondaries/component context heuristic, we need to bail in this case, else we would\n\t\t\t// have false positives when the .svelte.ts file provides a state creator function, encapsulating\n\t\t\t// the state and its mutations, and is being called from a component other than the one who\n\t\t\t// called the state creator function.\n\t\t\tif (i === 0) return null;\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const module of modules) {\n\t\t\tif (module.end == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (module.start.line < entry.line && module.end.line > entry.line) {\n\t\t\t\treturn module.component;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport const ADD_OWNER = Symbol('ADD_OWNER');\n\n/**\n * Together with `mark_module_end`, this function establishes the boundaries of a `.svelte` file,\n * such that subsequent calls to `get_component` can tell us which component is responsible\n * for a given state change\n */\nexport function mark_module_start() {\n\tconst start = get_stack()?.[2];\n\n\tif (start) {\n\t\t(boundaries[start.file] ??= []).push({\n\t\t\tstart,\n\t\t\t// @ts-expect-error\n\t\t\tend: null,\n\t\t\t// @ts-expect-error we add the component at the end, since HMR will overwrite the function\n\t\t\tcomponent: null\n\t\t});\n\t}\n}\n\n/**\n * @param {Function} component\n */\nexport function mark_module_end(component) {\n\tconst end = get_stack()?.[2];\n\n\tif (end) {\n\t\tconst boundaries_file = boundaries[end.file];\n\t\tconst boundary = boundaries_file[boundaries_file.length - 1];\n\n\t\tboundary.end = end;\n\t\tboundary.component = component;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {any | null} owner\n * @param {boolean} [global]\n * @param {boolean} [skip_warning]\n */\nexport function add_owner(object, owner, global = false, skip_warning = false) {\n\tif (object && !global) {\n\t\tconst component = dev_current_component_function;\n\t\tconst metadata = object[STATE_SYMBOL_METADATA];\n\t\tif (metadata && !has_owner(metadata, component)) {\n\t\t\tlet original = get_owner(metadata);\n\n\t\t\tif (owner && owner[FILENAME] !== component[FILENAME] && !skip_warning) {\n\t\t\t\tw.ownership_invalid_binding(component[FILENAME], owner[FILENAME], original[FILENAME]);\n\t\t\t}\n\t\t}\n\t}\n\n\tadd_owner_to_object(object, owner, new Set());\n}\n\n/**\n * @param {() => unknown} get_object\n * @param {any} Component\n * @param {boolean} [skip_warning]\n */\nexport function add_owner_effect(get_object, Component, skip_warning = false) {\n\tuser_pre_effect(() => {\n\t\tadd_owner(get_object(), Component, false, skip_warning);\n\t});\n}\n\n/**\n * @param {any} _this\n * @param {Function} owner\n * @param {Array<() => any>} getters\n * @param {boolean} skip_warning\n */\nexport function add_owner_to_class(_this, owner, getters, skip_warning) {\n\t_this[ADD_OWNER].current ||= getters.map(() => UNINITIALIZED);\n\n\tfor (let i = 0; i < getters.length; i += 1) {\n\t\tconst current = getters[i]();\n\t\t// For performance reasons we only re-add the owner if the state has changed\n\t\tif (current !== _this[ADD_OWNER][i]) {\n\t\t\t_this[ADD_OWNER].current[i] = current;\n\t\t\tadd_owner(current, owner, false, skip_warning);\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata | null} from\n * @param {ProxyMetadata} to\n */\nexport function widen_ownership(from, to) {\n\tif (to.owners === null) {\n\t\treturn;\n\t}\n\n\twhile (from) {\n\t\tif (from.owners === null) {\n\t\t\tto.owners = null;\n\t\t\tbreak;\n\t\t}\n\n\t\tfor (const owner of from.owners) {\n\t\t\tto.owners.add(owner);\n\t\t}\n\n\t\tfrom = from.parent;\n\t}\n}\n\n/**\n * @param {any} object\n * @param {Function | null} owner If `null`, then the object is globally owned and will not be checked\n * @param {Set<any>} seen\n */\nfunction add_owner_to_object(object, owner, seen) {\n\tconst metadata = /** @type {ProxyMetadata} */ (object?.[STATE_SYMBOL_METADATA]);\n\n\tif (metadata) {\n\t\t// this is a state proxy, add owner directly, if not globally shared\n\t\tif ('owners' in metadata && metadata.owners != null) {\n\t\t\tif (owner) {\n\t\t\t\tmetadata.owners.add(owner);\n\t\t\t} else {\n\t\t\t\tmetadata.owners = null;\n\t\t\t}\n\t\t}\n\t} else if (object && typeof object === 'object') {\n\t\tif (seen.has(object)) return;\n\t\tseen.add(object);\n\t\tif (ADD_OWNER in object && object[ADD_OWNER]) {\n\t\t\t// this is a class with state fields. we put this in a render effect\n\t\t\t// so that if state is replaced (e.g. `instance.name = { first, last }`)\n\t\t\t// the new state is also co-owned by the caller of `getContext`\n\t\t\trender_effect(() => {\n\t\t\t\tobject[ADD_OWNER](owner);\n\t\t\t});\n\t\t} else {\n\t\t\tvar proto = get_prototype_of(object);\n\n\t\t\tif (proto === Object.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (const key in object) {\n\t\t\t\t\tif (Object.getOwnPropertyDescriptor(object, key)?.get) {\n\t\t\t\t\t\t// Similar to the class case; the getter could update with a new state\n\t\t\t\t\t\tlet current = UNINITIALIZED;\n\t\t\t\t\t\trender_effect(() => {\n\t\t\t\t\t\t\tconst next = object[key];\n\t\t\t\t\t\t\tif (current !== next) {\n\t\t\t\t\t\t\t\tcurrent = next;\n\t\t\t\t\t\t\t\tadd_owner_to_object(next, owner, seen);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadd_owner_to_object(object[key], owner, seen);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (proto === Array.prototype) {\n\t\t\t\t// recurse until we find a state proxy\n\t\t\t\tfor (let i = 0; i < object.length; i += 1) {\n\t\t\t\t\tadd_owner_to_object(object[i], owner, seen);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @param {Function} component\n * @returns {boolean}\n */\nfunction has_owner(metadata, component) {\n\tif (metadata.owners === null) {\n\t\treturn true;\n\t}\n\n\treturn (\n\t\tmetadata.owners.has(component) ||\n\t\t// This helps avoid false positives when using HMR, where the component function is replaced\n\t\t(FILENAME in component &&\n\t\t\t[...metadata.owners].some(\n\t\t\t\t(owner) => /** @type {any} */ (owner)[FILENAME] === component[FILENAME]\n\t\t\t)) ||\n\t\t(metadata.parent !== null && has_owner(metadata.parent, component))\n\t);\n}\n\n/**\n * @param {ProxyMetadata} metadata\n * @returns {any}\n */\nfunction get_owner(metadata) {\n\treturn (\n\t\tmetadata?.owners?.values().next().value ??\n\t\tget_owner(/** @type {ProxyMetadata} */ (metadata.parent))\n\t);\n}\n\nlet skip = false;\n\n/**\n * @param {() => any} fn\n */\nexport function skip_ownership_validation(fn) {\n\tskip = true;\n\tfn();\n\tskip = false;\n}\n\n/**\n * @param {ProxyMetadata} metadata\n */\nexport function check_ownership(metadata) {\n\tif (skip) return;\n\n\tconst component = get_component();\n\n\tif (component && !has_owner(metadata, component)) {\n\t\tlet original = get_owner(metadata);\n\n\t\t// @ts-expect-error\n\t\tif (original[FILENAME] !== component[FILENAME]) {\n\t\t\t// @ts-expect-error\n\t\t\tw.ownership_invalid_mutation(component[FILENAME], original[FILENAME]);\n\t\t} else {\n\t\t\tw.ownership_invalid_mutation();\n\t\t}\n\t}\n}\n", "/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}", "/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { add_owner } from './dev/ownership.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from './runtime.js';\nimport { effect, teardown } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\n\tif (DEV) {\n\t\t// When state is put into context, we treat as if it's global from now on.\n\t\t// We do for performance reasons (it's for example very expensive to call\n\t\t// getContext on a big object many times when part of a list component)\n\t\t// and danger of false positives.\n\t\tuntrack(() => add_owner(context, null, true));\n\t}\n\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tvar ctx = (component_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\td: false,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t});\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tteardown(() => {\n\t\t/** @type {ComponentContext} */ (ctx).d = true;\n\t});\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n", "const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$props.id',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n", "/** @import { SourceLocation } from '#shared' */\nimport { HYDRATION_END, HYDRATION_START, HYDRATION_START_ELSE } from '../../../constants.js';\nimport { hydrating } from '../dom/hydration.js';\n\n/**\n * @param {any} fn\n * @param {string} filename\n * @param {SourceLocation[]} locations\n * @returns {any}\n */\nexport function add_locations(fn, filename, locations) {\n\treturn (/** @type {any[]} */ ...args) => {\n\t\tconst dom = fn(...args);\n\n\t\tvar node = hydrating ? dom : dom.nodeType === 11 ? dom.firstChild : dom;\n\t\tassign_locations(node, filename, locations);\n\n\t\treturn dom;\n\t};\n}\n\n/**\n * @param {Element} element\n * @param {string} filename\n * @param {SourceLocation} location\n */\nfunction assign_location(element, filename, location) {\n\t// @ts-expect-error\n\telement.__svelte_meta = {\n\t\tloc: { file: filename, line: location[0], column: location[1] }\n\t};\n\n\tif (location[2]) {\n\t\tassign_locations(element.firstChild, filename, location[2]);\n\t}\n}\n\n/**\n * @param {Node | null} node\n * @param {string} filename\n * @param {SourceLocation[]} locations\n */\nfunction assign_locations(node, filename, locations) {\n\tvar i = 0;\n\tvar depth = 0;\n\n\twhile (node && i < locations.length) {\n\t\tif (hydrating && node.nodeType === 8) {\n\t\t\tvar comment = /** @type {Comment} */ (node);\n\t\t\tif (comment.data === HYDRATION_START || comment.data === HYDRATION_START_ELSE) depth += 1;\n\t\t\telse if (comment.data[0] === HYDRATION_END) depth -= 1;\n\t\t}\n\n\t\tif (depth === 0 && node.nodeType === 1) {\n\t\t\tassign_location(/** @type {Element} */ (node), filename, locations[i++]);\n\t\t}\n\n\t\tnode = node.nextSibling;\n\t}\n}\n", "import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n", "/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (\n\t\t\t\t\tdelegated != null &&\n\t\t\t\t\t(!(/** @type {any} */ (current_target).disabled) ||\n\t\t\t\t\t\t// DOM could've been updated already by the time this is reached, so we check this as well\n\t\t\t\t\t\t// -> the target could not have been disabled because it emits the event in the first place\n\t\t\t\t\t\tevent.target === current_target)\n\t\t\t\t) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler !== 'function' && (has_side_effects || handler != null || error)) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\t\tconst phase = args[0]?.eventPhase < Event.BUBBLING_PHASE ? 'capture' : '';\n\t\tconst event_name = args[0]?.type + phase;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\thandler?.apply(element, args);\n}\n", "/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node, set_hydrating } from '../hydration.js';\nimport { create_text, get_first_child, get_next_sibling } from '../operations.js';\nimport { block } from '../../reactivity/effects.js';\nimport { HEAD_EFFECT } from '../../constants.js';\nimport { HYDRATION_START } from '../../../../constants.js';\n\n/**\n * @type {Node | undefined}\n */\nlet head_anchor;\n\nexport function reset_head_anchor() {\n\thead_anchor = undefined;\n}\n\n/**\n * @param {(anchor: Node) => void} render_fn\n * @returns {void}\n */\nexport function head(render_fn) {\n\t// The head function may be called after the first hydration pass and ssr comment nodes may still be present,\n\t// therefore we need to skip that when we detect that we're not in hydration mode.\n\tlet previous_hydrate_node = null;\n\tlet was_hydrating = hydrating;\n\n\t/** @type {Comment | Text} */\n\tvar anchor;\n\n\tif (hydrating) {\n\t\tprevious_hydrate_node = hydrate_node;\n\n\t\t// There might be multiple head blocks in our app, so we need to account for each one needing independent hydration.\n\t\tif (head_anchor === undefined) {\n\t\t\thead_anchor = /** @type {TemplateNode} */ (get_first_child(document.head));\n\t\t}\n\n\t\twhile (\n\t\t\thead_anchor !== null &&\n\t\t\t(head_anchor.nodeType !== 8 || /** @type {Comment} */ (head_anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\thead_anchor = /** @type {TemplateNode} */ (get_next_sibling(head_anchor));\n\t\t}\n\n\t\t// If we can't find an opening hydration marker, skip hydration (this can happen\n\t\t// if a framework rendered body but not head content)\n\t\tif (head_anchor === null) {\n\t\t\tset_hydrating(false);\n\t\t} else {\n\t\t\thead_anchor = set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(head_anchor)));\n\t\t}\n\t}\n\n\tif (!hydrating) {\n\t\tanchor = document.head.appendChild(create_text());\n\t}\n\n\ttry {\n\t\tblock(() => render_fn(anchor), HEAD_EFFECT);\n\t} finally {\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t\thead_anchor = hydrate_node; // so that next head block starts from the correct node\n\t\t\tset_hydrate_node(/** @type {TemplateNode} */ (previous_hydrate_node));\n\t\t}\n\t}\n}\n", "/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n", "/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child, is_firefox } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node || is_firefox ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case \u2014 void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n\n/**\n * Create (or hydrate) an unique UID for the component instance.\n */\nexport function props_id() {\n\tif (\n\t\thydrating &&\n\t\thydrate_node &&\n\t\thydrate_node.nodeType === 8 &&\n\t\thydrate_node.textContent?.startsWith(`#`)\n\t) {\n\t\tconst id = hydrate_node.textContent.substring(1);\n\t\thydrate_next();\n\t\treturn id;\n\t}\n\n\t// @ts-expect-error This way we ensure the id is unique even across Svelte runtimes\n\t(window.__svelte ??= {}).uid ??= 1;\n\n\t// @ts-expect-error\n\treturn `c${window.__svelte.uid++}`;\n}\n", "/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true \u2014 block effects should run their intro transitions \u2014\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n", "import * as e from '../errors.js';\nimport { component_context } from '../context.js';\nimport { FILENAME } from '../../../constants.js';\nimport { get_component } from './ownership.js';\n\n/** @param {Function & { [FILENAME]: string }} target */\nexport function check_target(target) {\n\tif (target) {\n\t\te.component_api_invalid_new(target[FILENAME] ?? 'a component', target.name);\n\t}\n}\n\nexport function legacy_api() {\n\tconst component = component_context?.function;\n\n\t/** @param {string} method */\n\tfunction error(method) {\n\t\t// @ts-expect-error\n\t\tconst parent = get_component()?.[FILENAME] ?? 'Something';\n\t\te.component_api_changed(parent, method, component[FILENAME]);\n\t}\n\n\treturn {\n\t\t$destroy: () => error('$destroy()'),\n\t\t$on: () => error('$on(...)'),\n\t\t$set: () => error('$set(...)')\n\t};\n}\n", "/** @import { Effect, TemplateNode } from '#client' */\nimport { EFFECT_TRANSPARENT } from '../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport { block, branch, pause_effect, resume_effect } from '../../reactivity/effects.js';\nimport { HYDRATION_START, HYDRATION_START_ELSE, UNINITIALIZED } from '../../../../constants.js';\n\n/**\n * @param {TemplateNode} node\n * @param {(branch: (fn: (anchor: Node, elseif?: [number,number]) => void, flag?: boolean) => void) => void} fn\n * @param {[number,number]} [elseif]\n * @returns {void}\n */\nexport function if_block(node, fn, [root_index, hydrate_index] = [0, 0]) {\n\tif (hydrating && root_index === 0) {\n\t\thydrate_next();\n\t}\n\n\tvar anchor = node;\n\n\t/** @type {Effect | null} */\n\tvar consequent_effect = null;\n\n\t/** @type {Effect | null} */\n\tvar alternate_effect = null;\n\n\t/** @type {UNINITIALIZED | boolean | null} */\n\tvar condition = UNINITIALIZED;\n\n\tvar flags = root_index > 0 ? EFFECT_TRANSPARENT : 0;\n\n\tvar has_branch = false;\n\n\tconst set_branch = (\n\t\t/** @type {(anchor: Node, elseif?: [number,number]) => void} */ fn,\n\t\tflag = true\n\t) => {\n\t\thas_branch = true;\n\t\tupdate_branch(flag, fn);\n\t};\n\n\tconst update_branch = (\n\t\t/** @type {boolean | null} */ new_condition,\n\t\t/** @type {null | ((anchor: Node, elseif?: [number,number]) => void)} */ fn\n\t) => {\n\t\tif (condition === (condition = new_condition)) return;\n\n\t\t/** Whether or not there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating && hydrate_index !== -1) {\n\t\t\tif (root_index === 0) {\n\t\t\t\tconst data = /** @type {Comment} */ (anchor).data;\n\t\t\t\tif (data === HYDRATION_START) {\n\t\t\t\t\thydrate_index = 0;\n\t\t\t\t} else if (data === HYDRATION_START_ELSE) {\n\t\t\t\t\thydrate_index = Infinity;\n\t\t\t\t} else {\n\t\t\t\t\thydrate_index = parseInt(data.substring(1));\n\t\t\t\t\tif (hydrate_index !== hydrate_index) {\n\t\t\t\t\t\t// if hydrate_index is NaN\n\t\t\t\t\t\t// we set an invalid index to force mismatch\n\t\t\t\t\t\thydrate_index = condition ? Infinity : -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst is_else = hydrate_index > root_index;\n\n\t\t\tif (!!condition === is_else) {\n\t\t\t\t// Hydration mismatch: remove everything inside the anchor and start fresh.\n\t\t\t\t// This could happen with `{#if browser}...{/if}`, for example\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t\thydrate_index = -1; // ignore hydration in next else if\n\t\t\t}\n\t\t}\n\n\t\tif (condition) {\n\t\t\tif (consequent_effect) {\n\t\t\t\tresume_effect(consequent_effect);\n\t\t\t} else if (fn) {\n\t\t\t\tconsequent_effect = branch(() => fn(anchor));\n\t\t\t}\n\n\t\t\tif (alternate_effect) {\n\t\t\t\tpause_effect(alternate_effect, () => {\n\t\t\t\t\talternate_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (alternate_effect) {\n\t\t\t\tresume_effect(alternate_effect);\n\t\t\t} else if (fn) {\n\t\t\t\talternate_effect = branch(() => fn(anchor, [root_index + 1, hydrate_index]));\n\t\t\t}\n\n\t\t\tif (consequent_effect) {\n\t\t\t\tpause_effect(consequent_effect, () => {\n\t\t\t\t\tconsequent_effect = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\t};\n\n\tblock(() => {\n\t\thas_branch = false;\n\t\tfn(set_branch);\n\t\tif (!has_branch) {\n\t\t\tupdate_branch(null, null);\n\t\t}\n\t}, flags);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n", "/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch \u2014 remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n", "import { escape_html } from '../../escaping.js';\nimport { clsx as _clsx } from 'clsx';\n\n/**\n * `<div translate={false}>` should be rendered as `<div translate=\"no\">` and _not_\n * `<div translate=\"false\">`, which is equivalent to `<div translate=\"yes\">`. There\n * may be other odd cases that need to be added to this list in future\n * @type {Record<string, Map<any, string>>}\n */\nconst replacements = {\n\ttranslate: new Map([\n\t\t[true, 'yes'],\n\t\t[false, 'no']\n\t])\n};\n\n/**\n * @template V\n * @param {string} name\n * @param {V} value\n * @param {boolean} [is_boolean]\n * @returns {string}\n */\nexport function attr(name, value, is_boolean = false) {\n\tif (value == null || (!value && is_boolean)) return '';\n\tconst normalized = (name in replacements && replacements[name].get(value)) || value;\n\tconst assignment = is_boolean ? '' : `=\"${escape_html(normalized, true)}\"`;\n\treturn ` ${name}${assignment}`;\n}\n\n/**\n * Small wrapper around clsx to preserve Svelte's (weird) handling of falsy values.\n * TODO Svelte 6 revisit this, and likely turn all falsy values into the empty string (what clsx also does)\n * @param  {any} value\n */\nexport function clsx(value) {\n\tif (typeof value === 'object') {\n\t\treturn _clsx(value);\n\t} else {\n\t\treturn value ?? '';\n\t}\n}\n\nconst whitespace = [...' \\t\\n\\r\\f\\u00a0\\u000b\\ufeff'];\n\n/**\n * @param {any} value\n * @param {string | null} [hash]\n * @param {Record<string, boolean>} [directives]\n * @returns {string | null}\n */\nexport function to_class(value, hash, directives) {\n\tvar classname = value == null ? '' : '' + value;\n\n\tif (hash) {\n\t\tclassname = classname ? classname + ' ' + hash : hash;\n\t}\n\n\tif (directives) {\n\t\tfor (var key in directives) {\n\t\t\tif (directives[key]) {\n\t\t\t\tclassname = classname ? classname + ' ' + key : key;\n\t\t\t} else if (classname.length) {\n\t\t\t\tvar len = key.length;\n\t\t\t\tvar a = 0;\n\n\t\t\t\twhile ((a = classname.indexOf(key, a)) >= 0) {\n\t\t\t\t\tvar b = a + len;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(a === 0 || whitespace.includes(classname[a - 1])) &&\n\t\t\t\t\t\t(b === classname.length || whitespace.includes(classname[b]))\n\t\t\t\t\t) {\n\t\t\t\t\t\tclassname = (a === 0 ? '' : classname.substring(0, a)) + classname.substring(b + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn classname === '' ? null : classname;\n}\n\n/**\n *\n * @param {Record<string,any>} styles\n * @param {boolean} important\n */\nfunction append_styles(styles, important = false) {\n\tvar separator = important ? ' !important;' : ';';\n\tvar css = '';\n\n\tfor (var key in styles) {\n\t\tvar value = styles[key];\n\t\tif (value != null && value !== '') {\n\t\t\tcss += ' ' + key + ': ' + value + separator;\n\t\t}\n\t}\n\n\treturn css;\n}\n\n/**\n * @param {string} name\n * @returns {string}\n */\nfunction to_css_name(name) {\n\tif (name[0] !== '-' || name[1] !== '-') {\n\t\treturn name.toLowerCase();\n\t}\n\treturn name;\n}\n\n/**\n * @param {any} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [styles]\n * @returns {string | null}\n */\nexport function to_style(value, styles) {\n\tif (styles) {\n\t\tvar new_style = '';\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar normal_styles;\n\n\t\t/** @type {Record<string,any> | undefined} */\n\t\tvar important_styles;\n\n\t\tif (Array.isArray(styles)) {\n\t\t\tnormal_styles = styles[0];\n\t\t\timportant_styles = styles[1];\n\t\t} else {\n\t\t\tnormal_styles = styles;\n\t\t}\n\n\t\tif (value) {\n\t\t\tvalue = String(value)\n\t\t\t\t.replaceAll(/\\s*\\/\\*.*?\\*\\/\\s*/g, '')\n\t\t\t\t.trim();\n\n\t\t\t/** @type {boolean | '\"' | \"'\"} */\n\t\t\tvar in_str = false;\n\t\t\tvar in_apo = 0;\n\t\t\tvar in_comment = false;\n\n\t\t\tvar reserved_names = [];\n\n\t\t\tif (normal_styles) {\n\t\t\t\treserved_names.push(...Object.keys(normal_styles).map(to_css_name));\n\t\t\t}\n\t\t\tif (important_styles) {\n\t\t\t\treserved_names.push(...Object.keys(important_styles).map(to_css_name));\n\t\t\t}\n\n\t\t\tvar start_index = 0;\n\t\t\tvar name_index = -1;\n\n\t\t\tconst len = value.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar c = value[i];\n\n\t\t\t\tif (in_comment) {\n\t\t\t\t\tif (c === '/' && value[i - 1] === '*') {\n\t\t\t\t\t\tin_comment = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (in_str) {\n\t\t\t\t\tif (in_str === c) {\n\t\t\t\t\t\tin_str = false;\n\t\t\t\t\t}\n\t\t\t\t} else if (c === '/' && value[i + 1] === '*') {\n\t\t\t\t\tin_comment = true;\n\t\t\t\t} else if (c === '\"' || c === \"'\") {\n\t\t\t\t\tin_str = c;\n\t\t\t\t} else if (c === '(') {\n\t\t\t\t\tin_apo++;\n\t\t\t\t} else if (c === ')') {\n\t\t\t\t\tin_apo--;\n\t\t\t\t}\n\n\t\t\t\tif (!in_comment && in_str === false && in_apo === 0) {\n\t\t\t\t\tif (c === ':' && name_index === -1) {\n\t\t\t\t\t\tname_index = i;\n\t\t\t\t\t} else if (c === ';' || i === len - 1) {\n\t\t\t\t\t\tif (name_index !== -1) {\n\t\t\t\t\t\t\tvar name = to_css_name(value.substring(start_index, name_index).trim());\n\n\t\t\t\t\t\t\tif (!reserved_names.includes(name)) {\n\t\t\t\t\t\t\t\tif (c !== ';') {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar property = value.substring(start_index, i).trim();\n\t\t\t\t\t\t\t\tnew_style += ' ' + property + ';';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart_index = i + 1;\n\t\t\t\t\t\tname_index = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (normal_styles) {\n\t\t\tnew_style += append_styles(normal_styles);\n\t\t}\n\n\t\tif (important_styles) {\n\t\t\tnew_style += append_styles(important_styles, true);\n\t\t}\n\n\t\tnew_style = new_style.trim();\n\t\treturn new_style === '' ? null : new_style;\n\t}\n\n\treturn value == null ? null : String(value);\n}\n", "import { to_style } from '../../../shared/attributes.js';\nimport { hydrating } from '../hydration.js';\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {Record<string, any>} prev\n * @param {Record<string, any>} next\n * @param {string} [priority]\n */\nfunction update_styles(dom, prev = {}, next, priority) {\n\tfor (var key in next) {\n\t\tvar value = next[key];\n\n\t\tif (prev[key] !== value) {\n\t\t\tif (next[key] == null) {\n\t\t\t\tdom.style.removeProperty(key);\n\t\t\t} else {\n\t\t\t\tdom.style.setProperty(key, value, priority);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} dom\n * @param {string | null} value\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [prev_styles]\n * @param {Record<string, any> | [Record<string, any>, Record<string, any>]} [next_styles]\n */\nexport function set_style(dom, value, prev_styles, next_styles) {\n\t// @ts-expect-error\n\tvar prev = dom.__style;\n\n\tif (hydrating || prev !== value) {\n\t\tvar next_style_attr = to_style(value, next_styles);\n\n\t\tif (!hydrating || next_style_attr !== dom.getAttribute('style')) {\n\t\t\tif (next_style_attr == null) {\n\t\t\t\tdom.removeAttribute('style');\n\t\t\t} else {\n\t\t\t\tdom.style.cssText = next_style_attr;\n\t\t\t}\n\t\t}\n\n\t\t// @ts-expect-error\n\t\tdom.__style = value;\n\t} else if (next_styles) {\n\t\tif (Array.isArray(next_styles)) {\n\t\t\tupdate_styles(dom, prev_styles?.[0], next_styles[0]);\n\t\t\tupdate_styles(dom, prev_styles?.[1], next_styles[1], 'important');\n\t\t} else {\n\t\t\tupdate_styles(dom, prev_styles, next_styles);\n\t\t}\n\t}\n\n\treturn next_styles;\n}\n", "import { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\nimport { set_class } from './class.js';\nimport { set_style } from './style.js';\nimport { NAMESPACE_HTML } from '../../../../constants.js';\n\nexport const CLASS = Symbol('class');\nexport const STYLE = Symbol('style');\n\nconst IS_CUSTOM_ELEMENT = Symbol('is custom element');\nconst IS_HTML = Symbol('is html');\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\tvar attributes = get_attributes(element);\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\tvar attributes = get_attributes(element);\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\tif (\n\t\t\t// `style` should use `set_attribute` rather than the setter\n\t\t\tprop !== 'style' &&\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\t(setters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object')\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string | symbol, any> | undefined} prev\n * @param {Record<string | symbol, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(element, prev, next, css_hash, skip_warning = false) {\n\tvar attributes = get_attributes(element);\n\n\tvar is_custom_element = attributes[IS_CUSTOM_ELEMENT];\n\tvar preserve_attribute_case = !attributes[IS_HTML];\n\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t} else if (css_hash || next[CLASS]) {\n\t\tnext.class = null; /* force call to set_class() */\n\t}\n\n\tif (next[STYLE]) {\n\t\tnext.style ??= null; /* force call to set_style() */\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'class') {\n\t\t\tvar is_html = element.namespaceURI === 'http://www.w3.org/1999/xhtml';\n\t\t\tset_class(element, is_html, value, css_hash, prev?.[CLASS], next[CLASS]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[CLASS] = next[CLASS];\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (key === 'style') {\n\t\t\tset_style(element, value, prev?.[STYLE], next[STYLE]);\n\t\t\tcurrent[key] = value;\n\t\t\tcurrent[STYLE] = next[STYLE];\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style') {\n\t\t\t// avoid using the setter\n\t\t\tset_attribute(element, key, value);\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked \u2014 preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\t\t\t\t\tconst use_default = prev === undefined;\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet previous = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = previous;\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tinput.value = input.__value = use_default ? previous : null;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet previous = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = previous;\n\t\t\t\t\t\tinput.checked = use_default ? previous : false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value, skip_warning);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/**\n *\n * @param {Element} element\n */\nfunction get_attributes(element) {\n\treturn /** @type {Record<string | symbol, unknown>} **/ (\n\t\t// @ts-expect-error\n\t\telement.__attributes ??= {\n\t\t\t[IS_CUSTOM_ELEMENT]: element.nodeName.includes('-'),\n\t\t\t[IS_HTML]: element.namespaceURI === NAMESPACE_HTML\n\t\t}\n\t);\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n", "import { teardown } from '../../../reactivity/effects.js';\nimport { get_descriptor } from '../../../../shared/utils.js';\n\n/**\n * Makes an `export`ed (non-prop) variable available on the `$$props` object\n * so that consumers can do `bind:x` on the component.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {V} value\n * @returns {void}\n */\nexport function bind_prop(props, prop, value) {\n\tvar desc = get_descriptor(props, prop);\n\n\tif (desc && desc.set) {\n\t\tprops[prop] = value;\n\t\tteardown(() => {\n\t\t\tprops[prop] = null;\n\t\t});\n\t}\n}\n", "import { STATE_SYMBOL } from '../../../constants.js';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n", "/** @import { ComponentContextLegacy } from '#client' */\nimport { run, run_all } from '../../../shared/utils.js';\nimport { component_context } from '../../context.js';\nimport { derived } from '../../reactivity/deriveds.js';\nimport { user_pre_effect, user_effect } from '../../reactivity/effects.js';\nimport { deep_read_state, get, untrack } from '../../runtime.js';\n\n/**\n * Legacy-mode only: Call `onMount` callbacks and set up `beforeUpdate`/`afterUpdate` effects\n * @param {boolean} [immutable]\n */\nexport function init(immutable = false) {\n\tconst context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\tconst callbacks = context.l.u;\n\tif (!callbacks) return;\n\n\tlet props = () => deep_read_state(context.s);\n\n\tif (immutable) {\n\t\tlet version = 0;\n\t\tlet prev = /** @type {Record<string, any>} */ ({});\n\n\t\t// In legacy immutable mode, before/afterUpdate only fire if the object identity of a prop changes\n\t\tconst d = derived(() => {\n\t\t\tlet changed = false;\n\t\t\tconst props = context.s;\n\t\t\tfor (const key in props) {\n\t\t\t\tif (props[key] !== prev[key]) {\n\t\t\t\t\tprev[key] = props[key];\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (changed) version++;\n\t\t\treturn version;\n\t\t});\n\n\t\tprops = () => get(d);\n\t}\n\n\t// beforeUpdate\n\tif (callbacks.b.length) {\n\t\tuser_pre_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.b);\n\t\t});\n\t}\n\n\t// onMount (must run before afterUpdate)\n\tuser_effect(() => {\n\t\tconst fns = untrack(() => callbacks.m.map(run));\n\t\treturn () => {\n\t\t\tfor (const fn of fns) {\n\t\t\t\tif (typeof fn === 'function') {\n\t\t\t\t\tfn();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n\n\t// afterUpdate\n\tif (callbacks.a.length) {\n\t\tuser_effect(() => {\n\t\t\tobserve_all(context, props);\n\t\t\trun_all(callbacks.a);\n\t\t});\n\t}\n}\n\n/**\n * Invoke the getter of all signals associated with a component\n * so they can be registered to the effect this function is called in.\n * @param {ComponentContextLegacy} context\n * @param {(() => void)} props\n */\nfunction observe_all(context, props) {\n\tif (context.l.s) {\n\t\tfor (const signal of context.l.s) get(signal);\n\t}\n\n\tprops();\n}\n", "/** @import { ComponentContext, ComponentContextLegacy } from '#client' */\n/** @import { EventDispatcher } from './index.js' */\n/** @import { NotFunction } from './internal/types.js' */\nimport { untrack } from './internal/client/runtime.js';\nimport { is_array } from './internal/shared/utils.js';\nimport { user_effect } from './internal/client/index.js';\nimport * as e from './internal/client/errors.js';\nimport { lifecycle_outside_component } from './internal/shared/errors.js';\nimport { legacy_mode_flag } from './internal/flags/index.js';\nimport { component_context } from './internal/client/context.js';\nimport { DEV } from 'esm-env';\n\nif (DEV) {\n\t/**\n\t * @param {string} rune\n\t */\n\tfunction throw_rune_error(rune) {\n\t\tif (!(rune in globalThis)) {\n\t\t\t// TODO if people start adjusting the \"this can contain runes\" config through v-p-s more, adjust this message\n\t\t\t/** @type {any} */\n\t\t\tlet value; // let's hope noone modifies this global, but belts and braces\n\t\t\tObject.defineProperty(globalThis, rune, {\n\t\t\t\tconfigurable: true,\n\t\t\t\t// eslint-disable-next-line getter-return\n\t\t\t\tget: () => {\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\te.rune_outside_svelte(rune);\n\t\t\t\t},\n\t\t\t\tset: (v) => {\n\t\t\t\t\tvalue = v;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tthrow_rune_error('$state');\n\tthrow_rune_error('$effect');\n\tthrow_rune_error('$derived');\n\tthrow_rune_error('$inspect');\n\tthrow_rune_error('$props');\n\tthrow_rune_error('$bindable');\n}\n\n/**\n * `onMount`, like [`$effect`](https://svelte.dev/docs/svelte/$effect), schedules a function to run as soon as the component has been mounted to the DOM.\n * Unlike `$effect`, the provided function only runs once.\n *\n * It must be called during the component's initialisation (but doesn't need to live _inside_ the component;\n * it can be called from an external module). If a function is returned _synchronously_ from `onMount`,\n * it will be called when the component is unmounted.\n *\n * `onMount` functions do not run during [server-side rendering](https://svelte.dev/docs/svelte/svelte-server#render).\n *\n * @template T\n * @param {() => NotFunction<T> | Promise<NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onMount');\n\t}\n\n\tif (legacy_mode_flag && component_context.l !== null) {\n\t\tinit_update_callbacks(component_context).m.push(fn);\n\t} else {\n\t\tuser_effect(() => {\n\t\t\tconst cleanup = untrack(fn);\n\t\t\tif (typeof cleanup === 'function') return /** @type {() => void} */ (cleanup);\n\t\t});\n\t}\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('onDestroy');\n\t}\n\n\tonMount(() => () => untrack(fn));\n}\n\n/**\n * @template [T=any]\n * @param {string} type\n * @param {T} [detail]\n * @param {any}params_0\n * @returns {CustomEvent<T>}\n */\nfunction create_custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs/svelte/legacy-on#Component-events).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * @deprecated Use callback props and/or the `$host()` rune instead \u2014 see [migration guide](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes-Component-events)\n * @template {Record<string, any>} [EventMap = any]\n * @returns {EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createEventDispatcher');\n\t}\n\n\treturn (type, detail, options) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = create_custom_event(/** @type {string} */ (type), detail, options);\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\n\t\treturn true;\n\t};\n}\n\n// TODO mark beforeUpdate and afterUpdate as deprecated in Svelte 6\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`.\n *\n * In runes mode use `$effect.pre` instead.\n *\n * @deprecated Use [`$effect.pre`](https://svelte.dev/docs/svelte/$effect#$effect.pre) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('beforeUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('beforeUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).b.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`.\n *\n * In runes mode use `$effect` instead.\n *\n * @deprecated Use [`$effect`](https://svelte.dev/docs/svelte/$effect) instead\n * @param {() => void} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component('afterUpdate');\n\t}\n\n\tif (component_context.l === null) {\n\t\te.lifecycle_legacy_only('afterUpdate');\n\t}\n\n\tinit_update_callbacks(component_context).a.push(fn);\n}\n\n/**\n * Legacy-mode: Init callbacks object for onMount/beforeUpdate/afterUpdate\n * @param {ComponentContext} context\n */\nfunction init_update_callbacks(context) {\n\tvar l = /** @type {ComponentContextLegacy} */ (context).l;\n\treturn (l.u ??= { a: [], b: [], m: [] });\n}\n\nexport { flushSync } from './internal/client/runtime.js';\nexport { getContext, getAllContexts, hasContext, setContext } from './internal/client/context.js';\nexport { hydrate, mount, unmount } from './internal/client/render.js';\nexport { tick, untrack } from './internal/client/runtime.js';\nexport { createRawSnippet } from './internal/client/dom/blocks/snippet.js';\n", "/** @import { StoreReferencesContainer } from '#client' */\n/** @import { Store } from '#shared' */\nimport { subscribe_to_store } from '../../../store/utils.js';\nimport { get as get_store } from '../../../store/shared/index.js';\nimport { define_property, noop } from '../../shared/utils.js';\nimport { get } from '../runtime.js';\nimport { teardown } from './effects.js';\nimport { mutable_source, set } from './sources.js';\n\n/**\n * Whether or not the prop currently being read is a store binding, as in\n * `<Child bind:x={$y} />`. If it is, we treat the prop as mutable even in\n * runes mode, and skip `binding_property_non_reactive` validation\n */\nlet is_store_binding = false;\n\nlet IS_UNMOUNTED = Symbol();\n\n/**\n * Gets the current value of a store. If the store isn't subscribed to yet, it will create a proxy\n * signal that will be updated when the store is. The store references container is needed to\n * track reassignments to stores and to track the correct component context.\n * @template V\n * @param {Store<V> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n * @returns {V}\n */\nexport function store_get(store, store_name, stores) {\n\tconst entry = (stores[store_name] ??= {\n\t\tstore: null,\n\t\tsource: mutable_source(undefined),\n\t\tunsubscribe: noop\n\t});\n\n\t// if the component that setup this is already unmounted we don't want to register a subscription\n\tif (entry.store !== store && !(IS_UNMOUNTED in stores)) {\n\t\tentry.unsubscribe();\n\t\tentry.store = store ?? null;\n\n\t\tif (store == null) {\n\t\t\tentry.source.v = undefined; // see synchronous callback comment below\n\t\t\tentry.unsubscribe = noop;\n\t\t} else {\n\t\t\tvar is_synchronous_callback = true;\n\n\t\t\tentry.unsubscribe = subscribe_to_store(store, (v) => {\n\t\t\t\tif (is_synchronous_callback) {\n\t\t\t\t\t// If the first updates to the store value (possibly multiple of them) are synchronously\n\t\t\t\t\t// inside a derived, we will hit the `state_unsafe_mutation` error if we `set` the value\n\t\t\t\t\tentry.source.v = v;\n\t\t\t\t} else {\n\t\t\t\t\tset(entry.source, v);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tis_synchronous_callback = false;\n\t\t}\n\t}\n\n\t// if the component that setup this stores is already unmounted the source will be out of sync\n\t// so we just use the `get` for the stores, less performant but it avoids to create a memory leak\n\t// and it will keep the value consistent\n\tif (store && IS_UNMOUNTED in stores) {\n\t\treturn get_store(store);\n\t}\n\n\treturn get(entry.source);\n}\n\n/**\n * Unsubscribe from a store if it's not the same as the one in the store references container.\n * We need this in addition to `store_get` because someone could unsubscribe from a store but\n * then never subscribe to the new one (if any), causing the subscription to stay open wrongfully.\n * @param {Store<any> | null | undefined} store\n * @param {string} store_name\n * @param {StoreReferencesContainer} stores\n */\nexport function store_unsub(store, store_name, stores) {\n\t/** @type {StoreReferencesContainer[''] | undefined} */\n\tlet entry = stores[store_name];\n\n\tif (entry && entry.store !== store) {\n\t\t// Don't reset store yet, so that store_get above can resubscribe to new store if necessary\n\t\tentry.unsubscribe();\n\t\tentry.unsubscribe = noop;\n\t}\n\n\treturn store;\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * @param {StoreReferencesContainer} stores\n * @param {string} store_name\n */\nexport function invalidate_store(stores, store_name) {\n\tvar entry = stores[store_name];\n\tif (entry.store !== null) {\n\t\tstore_set(entry.store, entry.source.v);\n\t}\n}\n\n/**\n * Unsubscribes from all auto-subscribed stores on destroy\n * @returns {[StoreReferencesContainer, ()=>void]}\n */\nexport function setup_stores() {\n\t/** @type {StoreReferencesContainer} */\n\tconst stores = {};\n\n\tfunction cleanup() {\n\t\tteardown(() => {\n\t\t\tfor (var store_name in stores) {\n\t\t\t\tconst ref = stores[store_name];\n\t\t\t\tref.unsubscribe();\n\t\t\t}\n\t\t\tdefine_property(stores, IS_UNMOUNTED, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: true\n\t\t\t});\n\t\t});\n\t}\n\n\treturn [stores, cleanup];\n}\n\n/**\n * Updates a store with a new value.\n * @param {Store<V>} store  the store to update\n * @param {any} expression  the expression that mutates the store\n * @param {V} new_value  the new store value\n * @template V\n */\nexport function store_mutate(store, expression, new_value) {\n\tstore.set(new_value);\n\treturn expression;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store, store_value, d = 1) {\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Store<number>} store\n * @param {number} store_value\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_store(store, store_value, d = 1) {\n\tconst value = store_value + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Called inside prop getters to communicate that the prop is a store binding\n */\nexport function mark_store_binding() {\n\tis_store_binding = true;\n}\n\n/**\n * Returns a tuple that indicates whether `fn()` reads a prop that is a store binding.\n * Used to prevent `binding_property_non_reactive` validation false positives and\n * ensure that these props are treated as mutable even in runes mode\n * @template T\n * @param {() => T} fn\n * @returns {[T, boolean]}\n */\nexport function capture_store_binding(fn) {\n\tvar previous_is_store_binding = is_store_binding;\n\n\ttry {\n\t\tis_store_binding = false;\n\t\treturn [fn(), is_store_binding];\n\t} finally {\n\t\tis_store_binding = previous_is_store_binding;\n\t}\n}\n", "/** @import { Derived, Source } from './types.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tPROPS_IS_BINDABLE,\n\tPROPS_IS_IMMUTABLE,\n\tPROPS_IS_LAZY_INITIAL,\n\tPROPS_IS_RUNES,\n\tPROPS_IS_UPDATED\n} from '../../../constants.js';\nimport { get_descriptor, is_function } from '../../shared/utils.js';\nimport { mutable_source, set, source, update } from './sources.js';\nimport { derived, derived_safe_equal } from './deriveds.js';\nimport { get, captured_signals, untrack } from '../runtime.js';\nimport { safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { LEGACY_DERIVED_PROP, LEGACY_PROPS, STATE_SYMBOL } from '../constants.js';\nimport { proxy } from '../proxy.js';\nimport { capture_store_binding } from './store.js';\nimport { legacy_mode_flag } from '../../flags/index.js';\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_prop(fn, d = 1) {\n\tconst value = fn();\n\tfn(value + d);\n\treturn value;\n}\n\n/**\n * @param {((value?: number) => number)} fn\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_pre_prop(fn, d = 1) {\n\tconst value = fn() + d;\n\tfn(value);\n\treturn value;\n}\n\n/**\n * The proxy handler for rest props (i.e. `const { x, ...rest } = $props()`).\n * Is passed the full `$$props` object and excludes the named props.\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, name?: string }>}}\n */\nconst rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\treturn target.props[key];\n\t},\n\tset(target, key) {\n\t\tif (DEV) {\n\t\t\t// TODO should this happen in prod too?\n\t\t\te.props_rest_readonly(`${target.name}.${String(key)}`);\n\t\t}\n\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @param {string} [name]\n * @returns {Record<string, unknown>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function rest_props(props, exclude, name) {\n\treturn new Proxy(\n\t\tDEV ? { props, exclude, name, other: {}, to_proxy: [] } : { props, exclude },\n\t\trest_props_handler\n\t);\n}\n\n/**\n * The proxy handler for legacy $$restProps and $$props\n * @type {ProxyHandler<{ props: Record<string | symbol, unknown>, exclude: Array<string | symbol>, special: Record<string | symbol, (v?: unknown) => unknown>, version: Source<number> }>}}\n */\nconst legacy_rest_props_handler = {\n\tget(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tget(target.version);\n\t\treturn key in target.special ? target.special[key]() : target.props[key];\n\t},\n\tset(target, key, value) {\n\t\tif (!(key in target.special)) {\n\t\t\t// Handle props that can temporarily get out of sync with the parent\n\t\t\t/** @type {Record<string, (v?: unknown) => unknown>} */\n\t\t\ttarget.special[key] = prop(\n\t\t\t\t{\n\t\t\t\t\tget [key]() {\n\t\t\t\t\t\treturn target.props[key];\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t/** @type {string} */ (key),\n\t\t\t\tPROPS_IS_UPDATED\n\t\t\t);\n\t\t}\n\n\t\ttarget.special[key](value);\n\t\tupdate(target.version); // $$props is coarse-grained: when $$props.x is updated, usages of $$props.y etc are also rerun\n\t\treturn true;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tif (target.exclude.includes(key)) return;\n\t\tif (key in target.props) {\n\t\t\treturn {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\tvalue: target.props[key]\n\t\t\t};\n\t\t}\n\t},\n\tdeleteProperty(target, key) {\n\t\t// Svelte 4 allowed for deletions on $$restProps\n\t\tif (target.exclude.includes(key)) return true;\n\t\ttarget.exclude.push(key);\n\t\tupdate(target.version);\n\t\treturn true;\n\t},\n\thas(target, key) {\n\t\tif (target.exclude.includes(key)) return false;\n\t\treturn key in target.props;\n\t},\n\townKeys(target) {\n\t\treturn Reflect.ownKeys(target.props).filter((key) => !target.exclude.includes(key));\n\t}\n};\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} exclude\n * @returns {Record<string, unknown>}\n */\nexport function legacy_rest_props(props, exclude) {\n\treturn new Proxy({ props, exclude, special: {}, version: source(0) }, legacy_rest_props_handler);\n}\n\n/**\n * The proxy handler for spread props. Handles the incoming array of props\n * that looks like `() => { dynamic: props }, { static: prop }, ..` and wraps\n * them so that the whole thing is passed to the component as the `$$props` argument.\n * @template {Record<string | symbol, unknown>} T\n * @type {ProxyHandler<{ props: Array<T | (() => T)> }>}}\n */\nconst spread_props_handler = {\n\tget(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) return p[key];\n\t\t}\n\t},\n\tset(target, key, value) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tconst desc = get_descriptor(p, key);\n\t\t\tif (desc && desc.set) {\n\t\t\t\tdesc.set(value);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetOwnPropertyDescriptor(target, key) {\n\t\tlet i = target.props.length;\n\t\twhile (i--) {\n\t\t\tlet p = target.props[i];\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (typeof p === 'object' && p !== null && key in p) {\n\t\t\t\tconst descriptor = get_descriptor(p, key);\n\t\t\t\tif (descriptor && !descriptor.configurable) {\n\t\t\t\t\t// Prevent a \"Non-configurability Report Error\": The target is an array, it does\n\t\t\t\t\t// not actually contain this property. If it is now described as non-configurable,\n\t\t\t\t\t// the proxy throws a validation error. Setting it to true avoids that.\n\t\t\t\t\tdescriptor.configurable = true;\n\t\t\t\t}\n\t\t\t\treturn descriptor;\n\t\t\t}\n\t\t}\n\t},\n\thas(target, key) {\n\t\t// To prevent a false positive `is_entry_props` in the `prop` function\n\t\tif (key === STATE_SYMBOL || key === LEGACY_PROPS) return false;\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tif (p != null && key in p) return true;\n\t\t}\n\n\t\treturn false;\n\t},\n\townKeys(target) {\n\t\t/** @type {Array<string | symbol>} */\n\t\tconst keys = [];\n\n\t\tfor (let p of target.props) {\n\t\t\tif (is_function(p)) p = p();\n\t\t\tfor (const key in p) {\n\t\t\t\tif (!keys.includes(key)) keys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n};\n\n/**\n * @param {Array<Record<string, unknown> | (() => Record<string, unknown>)>} props\n * @returns {any}\n */\nexport function spread_props(...props) {\n\treturn new Proxy({ props }, spread_props_handler);\n}\n\n/**\n * @param {Derived} current_value\n * @returns {boolean}\n */\nfunction has_destroyed_component_ctx(current_value) {\n\treturn current_value.ctx?.d ?? false;\n}\n\n/**\n * This function is responsible for synchronizing a possibly bound prop with the inner component state.\n * It is used whenever the compiler sees that the component writes to the prop, or when it has a default prop_value.\n * @template V\n * @param {Record<string, unknown>} props\n * @param {string} key\n * @param {number} flags\n * @param {V | (() => V)} [fallback]\n * @returns {(() => V | ((arg: V) => V) | ((arg: V, mutation: boolean) => V))}\n */\nexport function prop(props, key, flags, fallback) {\n\tvar immutable = (flags & PROPS_IS_IMMUTABLE) !== 0;\n\tvar runes = !legacy_mode_flag || (flags & PROPS_IS_RUNES) !== 0;\n\tvar bindable = (flags & PROPS_IS_BINDABLE) !== 0;\n\tvar lazy = (flags & PROPS_IS_LAZY_INITIAL) !== 0;\n\tvar is_store_sub = false;\n\tvar prop_value;\n\n\tif (bindable) {\n\t\t[prop_value, is_store_sub] = capture_store_binding(() => /** @type {V} */ (props[key]));\n\t} else {\n\t\tprop_value = /** @type {V} */ (props[key]);\n\t}\n\n\t// Can be the case when someone does `mount(Component, props)` with `let props = $state({...})`\n\t// or `createClassComponent(Component, props)`\n\tvar is_entry_props = STATE_SYMBOL in props || LEGACY_PROPS in props;\n\n\tvar setter =\n\t\t(bindable &&\n\t\t\t(get_descriptor(props, key)?.set ??\n\t\t\t\t(is_entry_props && key in props && ((v) => (props[key] = v))))) ||\n\t\tundefined;\n\n\tvar fallback_value = /** @type {V} */ (fallback);\n\tvar fallback_dirty = true;\n\tvar fallback_used = false;\n\n\tvar get_fallback = () => {\n\t\tfallback_used = true;\n\t\tif (fallback_dirty) {\n\t\t\tfallback_dirty = false;\n\t\t\tif (lazy) {\n\t\t\t\tfallback_value = untrack(/** @type {() => V} */ (fallback));\n\t\t\t} else {\n\t\t\t\tfallback_value = /** @type {V} */ (fallback);\n\t\t\t}\n\t\t}\n\n\t\treturn fallback_value;\n\t};\n\n\tif (prop_value === undefined && fallback !== undefined) {\n\t\tif (setter && runes) {\n\t\t\te.props_invalid_value(key);\n\t\t}\n\n\t\tprop_value = get_fallback();\n\t\tif (setter) setter(prop_value);\n\t}\n\n\t/** @type {() => V} */\n\tvar getter;\n\tif (runes) {\n\t\tgetter = () => {\n\t\t\tvar value = /** @type {V} */ (props[key]);\n\t\t\tif (value === undefined) return get_fallback();\n\t\t\tfallback_dirty = true;\n\t\t\tfallback_used = false;\n\t\t\treturn value;\n\t\t};\n\t} else {\n\t\t// Svelte 4 did not trigger updates when a primitive value was updated to the same value.\n\t\t// Replicate that behavior through using a derived\n\t\tvar derived_getter = (immutable ? derived : derived_safe_equal)(\n\t\t\t() => /** @type {V} */ (props[key])\n\t\t);\n\t\tderived_getter.f |= LEGACY_DERIVED_PROP;\n\t\tgetter = () => {\n\t\t\tvar value = get(derived_getter);\n\t\t\tif (value !== undefined) fallback_value = /** @type {V} */ (undefined);\n\t\t\treturn value === undefined ? fallback_value : value;\n\t\t};\n\t}\n\n\t// easy mode \u2014 prop is never written to\n\tif ((flags & PROPS_IS_UPDATED) === 0) {\n\t\treturn getter;\n\t}\n\n\t// intermediate mode \u2014 prop is written to, but the parent component had\n\t// `bind:foo` which means we can just call `$$props.foo = value` directly\n\tif (setter) {\n\t\tvar legacy_parent = props.$$legacy;\n\t\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t\tif (arguments.length > 0) {\n\t\t\t\t// We don't want to notify if the value was mutated and the parent is in runes mode.\n\t\t\t\t// In that case the state proxy (if it exists) should take care of the notification.\n\t\t\t\t// If the parent is not in runes mode, we need to notify on mutation, too, that the prop\n\t\t\t\t// has changed because the parent will not be able to detect the change otherwise.\n\t\t\t\tif (!runes || !mutation || legacy_parent || is_store_sub) {\n\t\t\t\t\t/** @type {Function} */ (setter)(mutation ? getter() : value);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\treturn getter();\n\t\t\t}\n\t\t};\n\t}\n\n\t// hard mode. this is where it gets ugly \u2014 the value in the child should\n\t// synchronize with the parent, but it should also be possible to temporarily\n\t// set the value to something else locally.\n\tvar from_child = false;\n\tvar was_from_child = false;\n\n\t// The derived returns the current value. The underlying mutable\n\t// source is written to from various places to persist this value.\n\tvar inner_current_value = mutable_source(prop_value);\n\tvar current_value = derived(() => {\n\t\tvar parent_value = getter();\n\t\tvar child_value = get(inner_current_value);\n\n\t\tif (from_child) {\n\t\t\tfrom_child = false;\n\t\t\twas_from_child = true;\n\t\t\treturn child_value;\n\t\t}\n\n\t\twas_from_child = false;\n\t\treturn (inner_current_value.v = parent_value);\n\t});\n\n\t// Ensure we eagerly capture the initial value if it's bindable\n\tif (bindable) {\n\t\tget(current_value);\n\t}\n\n\tif (!immutable) current_value.equals = safe_equals;\n\n\treturn function (/** @type {any} */ value, /** @type {boolean} */ mutation) {\n\t\t// legacy nonsense \u2014 need to ensure the source is invalidated when necessary\n\t\t// also needed for when handling inspect logic so we can inspect the correct source signal\n\t\tif (captured_signals !== null) {\n\t\t\t// set this so that we don't reset to the parent value if `d`\n\t\t\t// is invalidated because of `invalidate_inner_signals` (rather\n\t\t\t// than because the parent or child value changed)\n\t\t\tfrom_child = was_from_child;\n\t\t\t// invoke getters so that signals are picked up by `invalidate_inner_signals`\n\t\t\tgetter();\n\t\t\tget(inner_current_value);\n\t\t}\n\n\t\tif (arguments.length > 0) {\n\t\t\tconst new_value = mutation ? get(current_value) : runes && bindable ? proxy(value) : value;\n\n\t\t\tif (!current_value.equals(new_value)) {\n\t\t\t\tfrom_child = true;\n\t\t\t\tset(inner_current_value, new_value);\n\t\t\t\t// To ensure the fallback value is consistent when used with proxies, we\n\t\t\t\t// update the local fallback_value, but only if the fallback is actively used\n\t\t\t\tif (fallback_used && fallback_value !== undefined) {\n\t\t\t\t\tfallback_value = new_value;\n\t\t\t\t}\n\n\t\t\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\n\t\t\t\tuntrack(() => get(current_value)); // force a synchronisation immediately\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (has_destroyed_component_ctx(current_value)) {\n\t\t\treturn current_value.v;\n\t\t}\n\n\t\treturn get(current_value);\n\t};\n}\n", "import { dev_current_component_function } from './context.js';\nimport { is_array } from '../shared/utils.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { render_effect } from './reactivity/effects.js';\nimport * as w from './warnings.js';\nimport { capture_store_binding } from './reactivity/store.js';\n\n/**\n * @param {() => any} collection\n * @param {(item: any, index: number) => string} key_fn\n * @returns {void}\n */\nexport function validate_each_keys(collection, key_fn) {\n\trender_effect(() => {\n\t\tconst keys = new Map();\n\t\tconst maybe_array = collection();\n\t\tconst array = is_array(maybe_array)\n\t\t\t? maybe_array\n\t\t\t: maybe_array == null\n\t\t\t\t? []\n\t\t\t\t: Array.from(maybe_array);\n\t\tconst length = array.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst key = key_fn(array[i], i);\n\t\t\tif (keys.has(key)) {\n\t\t\t\tconst a = String(keys.get(key));\n\t\t\t\tconst b = String(i);\n\n\t\t\t\t/** @type {string | null} */\n\t\t\t\tlet k = String(key);\n\t\t\t\tif (k.startsWith('[object ')) k = null;\n\n\t\t\t\te.each_key_duplicate(a, b, k);\n\t\t\t}\n\t\t\tkeys.set(key, i);\n\t\t}\n\t});\n}\n\n/**\n * @param {string} binding\n * @param {() => Record<string, any>} get_object\n * @param {() => string} get_property\n * @param {number} line\n * @param {number} column\n */\nexport function validate_binding(binding, get_object, get_property, line, column) {\n\tvar warned = false;\n\n\tvar filename = dev_current_component_function?.[FILENAME];\n\n\trender_effect(() => {\n\t\tif (warned) return;\n\n\t\tvar [object, is_store_sub] = capture_store_binding(get_object);\n\n\t\tif (is_store_sub) return;\n\n\t\tvar property = get_property();\n\n\t\tvar ran = false;\n\n\t\t// by making the (possibly false, but it would be an extreme edge case) assumption\n\t\t// that a getter has a corresponding setter, we can determine if a property is\n\t\t// reactive by seeing if this effect has dependencies\n\t\tvar effect = render_effect(() => {\n\t\t\tif (ran) return;\n\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tobject[property];\n\t\t});\n\n\t\tran = true;\n\n\t\tif (effect.deps === null) {\n\t\t\tvar location = `${filename}:${line}:${column}`;\n\t\t\tw.binding_property_non_reactive(binding, location);\n\n\t\t\twarned = true;\n\t\t}\n\t});\n}\n", "/** @import { ComponentConstructorOptions, ComponentType, SvelteComponent, Component } from 'svelte' */\nimport { DIRTY, LEGACY_PROPS, MAYBE_DIRTY } from '../internal/client/constants.js';\nimport { user_pre_effect } from '../internal/client/reactivity/effects.js';\nimport { mutable_source, set } from '../internal/client/reactivity/sources.js';\nimport { hydrate, mount, unmount } from '../internal/client/render.js';\nimport { active_effect, flushSync, get, set_signal_status } from '../internal/client/runtime.js';\nimport { lifecycle_outside_component } from '../internal/shared/errors.js';\nimport { define_property, is_array } from '../internal/shared/utils.js';\nimport * as w from '../internal/client/warnings.js';\nimport { DEV } from 'esm-env';\nimport { FILENAME } from '../constants.js';\nimport { component_context, dev_current_component_function } from '../internal/client/context.js';\n\n/**\n * Takes the same options as a Svelte 4 component and the component function and returns a Svelte 4 compatible component.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {ComponentConstructorOptions<Props> & {\n * \tcomponent: ComponentType<SvelteComponent<Props, Events, Slots>> | Component<Props>;\n * }} options\n * @returns {SvelteComponent<Props, Events, Slots> & Exports}\n */\nexport function createClassComponent(options) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn new Svelte4Component(options);\n}\n\n/**\n * Takes the component function and returns a Svelte 4 compatible component constructor.\n *\n * @deprecated Use this only as a temporary solution to migrate your imperative component code to Svelte 5.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @template {Record<string, any>} Events\n * @template {Record<string, any>} Slots\n *\n * @param {SvelteComponent<Props, Events, Slots> | Component<Props>} component\n * @returns {ComponentType<SvelteComponent<Props, Events, Slots> & Exports>}\n */\nexport function asClassComponent(component) {\n\t// @ts-expect-error $$prop_def etc are not actually defined\n\treturn class extends Svelte4Component {\n\t\t/** @param {any} options */\n\t\tconstructor(options) {\n\t\t\tsuper({\n\t\t\t\tcomponent,\n\t\t\t\t...options\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Support using the component as both a class and function during the transition period\n * @typedef  {{new (o: ComponentConstructorOptions): SvelteComponent;(...args: Parameters<Component<Record<string, any>>>): ReturnType<Component<Record<string, any>, Record<string, any>>>;}} LegacyComponentType\n */\n\nclass Svelte4Component {\n\t/** @type {any} */\n\t#events;\n\n\t/** @type {Record<string, any>} */\n\t#instance;\n\n\t/**\n\t * @param {ComponentConstructorOptions & {\n\t *  component: any;\n\t * }} options\n\t */\n\tconstructor(options) {\n\t\tvar sources = new Map();\n\n\t\t/**\n\t\t * @param {string | symbol} key\n\t\t * @param {unknown} value\n\t\t */\n\t\tvar add_source = (key, value) => {\n\t\t\tvar s = mutable_source(value);\n\t\t\tsources.set(key, s);\n\t\t\treturn s;\n\t\t};\n\n\t\t// Replicate coarse-grained props through a proxy that has a version source for\n\t\t// each property, which is incremented on updates to the property itself. Do not\n\t\t// use our $state proxy because that one has fine-grained reactivity.\n\t\tconst props = new Proxy(\n\t\t\t{ ...(options.props || {}), $$events: {} },\n\t\t\t{\n\t\t\t\tget(target, prop) {\n\t\t\t\t\treturn get(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t},\n\t\t\t\thas(target, prop) {\n\t\t\t\t\t// Necessary to not throw \"invalid binding\" validation errors on the component side\n\t\t\t\t\tif (prop === LEGACY_PROPS) return true;\n\n\t\t\t\t\tget(sources.get(prop) ?? add_source(prop, Reflect.get(target, prop)));\n\t\t\t\t\treturn Reflect.has(target, prop);\n\t\t\t\t},\n\t\t\t\tset(target, prop, value) {\n\t\t\t\t\tset(sources.get(prop) ?? add_source(prop, value), value);\n\t\t\t\t\treturn Reflect.set(target, prop, value);\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.#instance = (options.hydrate ? hydrate : mount)(options.component, {\n\t\t\ttarget: options.target,\n\t\t\tanchor: options.anchor,\n\t\t\tprops,\n\t\t\tcontext: options.context,\n\t\t\tintro: options.intro ?? false,\n\t\t\trecover: options.recover\n\t\t});\n\n\t\t// We don't flushSync for custom element wrappers or if the user doesn't want it\n\t\tif (!options?.props?.$$host || options.sync === false) {\n\t\t\tflushSync();\n\t\t}\n\n\t\tthis.#events = props.$$events;\n\n\t\tfor (const key of Object.keys(this.#instance)) {\n\t\t\tif (key === '$set' || key === '$destroy' || key === '$on') continue;\n\t\t\tdefine_property(this, key, {\n\t\t\t\tget() {\n\t\t\t\t\treturn this.#instance[key];\n\t\t\t\t},\n\t\t\t\t/** @param {any} value */\n\t\t\t\tset(value) {\n\t\t\t\t\tthis.#instance[key] = value;\n\t\t\t\t},\n\t\t\t\tenumerable: true\n\t\t\t});\n\t\t}\n\n\t\tthis.#instance.$set = /** @param {Record<string, any>} next */ (next) => {\n\t\t\tObject.assign(props, next);\n\t\t};\n\n\t\tthis.#instance.$destroy = () => {\n\t\t\tunmount(this.#instance);\n\t\t};\n\t}\n\n\t/** @param {Record<string, any>} props */\n\t$set(props) {\n\t\tthis.#instance.$set(props);\n\t}\n\n\t/**\n\t * @param {string} event\n\t * @param {(...args: any[]) => any} callback\n\t * @returns {any}\n\t */\n\t$on(event, callback) {\n\t\tthis.#events[event] = this.#events[event] || [];\n\n\t\t/** @param {any[]} args */\n\t\tconst cb = (...args) => callback.call(this, ...args);\n\t\tthis.#events[event].push(cb);\n\t\treturn () => {\n\t\t\tthis.#events[event] = this.#events[event].filter(/** @param {any} fn */ (fn) => fn !== cb);\n\t\t};\n\t}\n\n\t$destroy() {\n\t\tthis.#instance.$destroy();\n\t}\n}\n\n/**\n * Runs the given function once immediately on the server, and works like `$effect.pre` on the client.\n *\n * @deprecated Use this only as a temporary solution to migrate your component code to Svelte 5.\n * @param {() => void | (() => void)} fn\n * @returns {void}\n */\nexport function run(fn) {\n\tuser_pre_effect(() => {\n\t\tfn();\n\t\tvar effect = /** @type {import('#client').Effect} */ (active_effect);\n\t\t// If the effect is immediately made dirty again, mark it as maybe dirty to emulate legacy behaviour\n\t\tif ((effect.f & DIRTY) !== 0) {\n\t\t\tlet filename = \"a file (we can't know which one)\";\n\t\t\tif (DEV) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tfilename = dev_current_component_function?.[FILENAME] ?? filename;\n\t\t\t}\n\t\t\tw.legacy_recursive_reactive_block(filename);\n\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t}\n\t});\n}\n\n/**\n * Function to mimic the multiple listeners available in svelte 4\n * @deprecated\n * @param {EventListener[]} handlers\n * @returns {EventListener}\n */\nexport function handlers(...handlers) {\n\treturn function (event) {\n\t\tconst { stopImmediatePropagation } = event;\n\t\tlet stopped = false;\n\n\t\tevent.stopImmediatePropagation = () => {\n\t\t\tstopped = true;\n\t\t\tstopImmediatePropagation.call(event);\n\t\t};\n\n\t\tconst errors = [];\n\n\t\tfor (const handler of handlers) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error `this` is not typed\n\t\t\t\thandler?.call(this, event);\n\t\t\t} catch (e) {\n\t\t\t\terrors.push(e);\n\t\t\t}\n\n\t\t\tif (stopped) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let error of errors) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\t};\n}\n\n/**\n * Function to create a `bubble` function that mimic the behavior of `on:click` without handler available in svelte 4.\n * @deprecated Use this only as a temporary solution to migrate your automatically delegated events in Svelte 5.\n */\nexport function createBubbler() {\n\tconst active_component_context = component_context;\n\tif (active_component_context === null) {\n\t\tlifecycle_outside_component('createBubbler');\n\t}\n\n\treturn (/**@type {string}*/ type) => (/**@type {Event}*/ event) => {\n\t\tconst events = /** @type {Record<string, Function | Function[]>} */ (\n\t\t\tactive_component_context.s.$$events\n\t\t)?.[/** @type {any} */ (type)];\n\n\t\tif (events) {\n\t\t\tconst callbacks = is_array(events) ? events.slice() : [events];\n\t\t\tfor (const fn of callbacks) {\n\t\t\t\tfn.call(active_component_context.x, event);\n\t\t\t}\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\nexport {\n\tonce,\n\tpreventDefault,\n\tself,\n\tstopImmediatePropagation,\n\tstopPropagation,\n\ttrusted,\n\tpassive,\n\tnonpassive\n} from '../internal/client/dom/legacy/event-modifiers.js';\n", "import { createClassComponent } from '../../../../legacy/legacy-client.js';\nimport { destroy_effect, effect_root, render_effect } from '../../reactivity/effects.js';\nimport { append } from '../template.js';\nimport { define_property, get_descriptor, object_keys } from '../../../shared/utils.js';\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n\n/** @type {any} */\nlet SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** @type {any} The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** @type {Record<string, any>} Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, EventListenerOrEventListenerObject[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<EventListenerOrEventListenerObject, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\t\t/** @type {any} The managed render effect for reflecting attributes */\n\t\t$$me;\n\n\t\t/**\n\t\t * @param {*} $$componentCtor\n\t\t * @param {*} $$slots\n\t\t * @param {*} use_shadow_dom\n\t\t */\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\t/**\n\t\t * @param {string} type\n\t\t * @param {EventListenerOrEventListenerObject} listener\n\t\t * @param {boolean | AddEventListenerOptions} [options]\n\t\t */\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t/** @param {string} name */\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {Element} anchor\n\t\t\t\t\t */\n\t\t\t\t\treturn (anchor) => {\n\t\t\t\t\t\tconst slot = document.createElement('slot');\n\t\t\t\t\t\tif (name !== 'default') slot.name = name;\n\n\t\t\t\t\t\tappend(anchor, slot);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\tif (name === 'default' && !this.$$d.children) {\n\t\t\t\t\t\t\tthis.$$d.children = create_slot(name);\n\t\t\t\t\t\t\t$$slots.default = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$$slots[name] = create_slot(name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = createClassComponent({\n\t\t\t\t\tcomponent: this.$$ctor,\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$host: this\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tthis.$$me = effect_root(() => {\n\t\t\t\t\trender_effect(() => {\n\t\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\t\tfor (const key of object_keys(this.$$c)) {\n\t\t\t\t\t\t\tif (!this.$$p_d[key]?.reflect) continue;\n\t\t\t\t\t\t\tthis.$$d[key] = this.$$c[key];\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.$$r = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\n\t\t/**\n\t\t * @param {string} attr\n\t\t * @param {string} _oldValue\n\t\t * @param {string} newValue\n\t\t */\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$me();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @param {string} attribute_name\n\t\t */\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tobject_keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @param {HTMLElement} element\n */\nfunction get_custom_elements_slots(element) {\n\t/** @type {Record<string, true>} */\n\tconst result = {};\n\telement.childNodes.forEach((node) => {\n\t\tresult[/** @type {Element} node */ (node).slot || 'default'] = true;\n\t});\n\treturn result;\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {any} Component  A Svelte component function\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} exports  Explicitly exported values, other than props\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\texports,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn object_keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tobject_keys(props_definition).forEach((prop) => {\n\t\tdefine_property(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tvar component = this.$$c;\n\n\t\t\t\tif (component) {\n\t\t\t\t\t// // If the instance has an accessor, use that instead\n\t\t\t\t\tvar setter = get_descriptor(component, prop)?.get;\n\n\t\t\t\t\tif (setter) {\n\t\t\t\t\t\tcomponent[prop] = value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomponent.$set({ [prop]: value });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\texports.forEach((property) => {\n\t\tdefine_property(Class.prototype, property, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[property];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ Class;\n\treturn Class;\n}\n", "import { STATE_SYMBOL } from '../constants.js';\nimport { snapshot } from '../../shared/clone.js';\nimport * as w from '../warnings.js';\nimport { untrack } from '../runtime.js';\n\n/**\n * @param {string} method\n * @param  {...any} objects\n */\nexport function log_if_contains_state(method, ...objects) {\n\tuntrack(() => {\n\t\ttry {\n\t\t\tlet has_state = false;\n\t\t\tconst transformed = [];\n\n\t\t\tfor (const obj of objects) {\n\t\t\t\tif (obj && typeof obj === 'object' && STATE_SYMBOL in obj) {\n\t\t\t\t\ttransformed.push(snapshot(obj, true));\n\t\t\t\t\thas_state = true;\n\t\t\t\t} else {\n\t\t\t\t\ttransformed.push(obj);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (has_state) {\n\t\t\t\tw.console_log_state(method);\n\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.log('%c[snapshot]', 'color: grey', ...transformed);\n\t\t\t}\n\t\t} catch {}\n\t});\n\n\treturn objects;\n}\n", "export const TIMINGS = {\n  GROW_TIME: 10000, // 10 seconds to grow\n  BREW_TIME: 5000, // 5 seconds to brew\n  HARVEST_COOLDOWN: 500, // 0.5 second cooldown for harvesting\n  GARDEN_COOLDOWN: 500, // 0.5 second cooldown for planting\n  SERVE_COOLDOWN: 500, // 0.5 second cooldown for serving\n};\n\n// Convert milliseconds to progress increments (for progress bars)\nexport const PROGRESS_INCREMENT = {\n  GROW: 100 / (TIMINGS.GROW_TIME / 100), // Progress increment per 100ms\n  BREW: 100 / (TIMINGS.BREW_TIME / 100), // Progress increment per 100ms\n};\n", "<script>\n    import { TIMINGS, PROGRESS_INCREMENT } from \"../config.js\";\n    import { createEventDispatcher } from \"svelte\";\n    const dispatch = createEventDispatcher();\n\n    let progress = 0;\n    export let isGrowing = false;\n    export let readyToHarvest = false;\n\n    // Create a method to get the current state\n    export function getState() {\n        return { isGrowing, readyToHarvest };\n    }\n\n    export function plantTea() {\n        if (isGrowing || readyToHarvest) return;\n\n        isGrowing = true;\n        readyToHarvest = false;\n        progress = 0;\n\n        const interval = setInterval(() => {\n            progress += PROGRESS_INCREMENT.GROW;\n            if (progress >= 100) {\n                clearInterval(interval);\n                isGrowing = false;\n                readyToHarvest = true;\n            }\n        }, 100);\n    }\n\n    export function harvest() {\n        if (!readyToHarvest) return;\n\n        readyToHarvest = false;\n        isGrowing = false;\n        progress = 0;\n        dispatch(\"plantComplete\");\n    }\n</script>\n\n<div class=\"garden-plot\">\n    <button\n        on:click={plantTea}\n        disabled={isGrowing || readyToHarvest}\n        data-growing={isGrowing}\n        data-harvestable={readyToHarvest}\n    >\n        {#if isGrowing}\n            Growing... ({progress}%)\n        {:else if readyToHarvest}\n            Ready to Harvest!\n        {:else}\n            Plant Tea\n        {/if}\n    </button>\n\n    {#if isGrowing || readyToHarvest}\n        <progress value={progress} max=\"100\"></progress>\n    {/if}\n\n    <div>\n        <button on:click={harvest} disabled={!readyToHarvest}>\n            Harvest Tea</button\n        >\n    </div>\n</div>\n", "<script>\n    import { TIMINGS, PROGRESS_INCREMENT } from \"../config.js\";\n    export let harvestedPlants = 0;\n    let progress = 0;\n    let isBrewing = false;\n    let brewedTea = 0;\n\n    import { createEventDispatcher } from \"svelte\";\n    const dispatch = createEventDispatcher();\n\n    // Add getState method for sprites\n    export function getState() {\n        return { isBrewing, brewedTea };\n    }\n\n    export function brewTea() {\n        if (isBrewing || harvestedPlants < 1) return;\n\n        isBrewing = true;\n        progress = 0;\n\n        dispatch(\"useTea\");\n\n        const interval = setInterval(() => {\n            progress += PROGRESS_INCREMENT.BREW;\n            if (progress >= 100) {\n                clearInterval(interval);\n                isBrewing = false;\n                brewedTea += 1;\n                dispatch(\"teaBrewed\");\n            }\n        }, 100);\n    }\n</script>\n\n<div class=\"teapot\">\n    <button\n        on:click={brewTea}\n        disabled={isBrewing || (!isBrewing && harvestedPlants < 1)}\n    >\n        {#if !isBrewing && harvestedPlants < 1}\n            Need tea leaves to brew\n        {:else if isBrewing}\n            Brewing... ({progress}%)\n        {:else}\n            Brew Tea\n        {/if}\n    </button>\n\n    {#if isBrewing}\n        <progress value={progress} max=\"100\"></progress>\n    {/if}\n</div>\n", "<script>\n    export let points = 0;\n\n    const GARDEN_PLOT_COST = 10;\n    const TEAPOT_COST = 75;\n    const SPRITE_COSTS = {\n        garden: 100,\n        harvest: 150,\n        brewmaster: 250,\n        cafe: 500,\n    };\n\n    import { createEventDispatcher } from \"svelte\";\n    const dispatch = createEventDispatcher();\n\n    function buyGardenPlot() {\n        if (points >= GARDEN_PLOT_COST) {\n            dispatch(\"purchase\", {\n                item: \"gardenPlot\",\n                cost: GARDEN_PLOT_COST,\n            });\n        }\n    }\n\n    function buyTeapot() {\n        if (points >= TEAPOT_COST) {\n            dispatch(\"purchase\", {\n                item: \"teapot\",\n                cost: TEAPOT_COST,\n            });\n        }\n    }\n\n    function hireSprite(type) {\n        if (points >= SPRITE_COSTS[type]) {\n            dispatch(\"purchase\", {\n                item: \"sprite\",\n                spriteType: type,\n                cost: SPRITE_COSTS[type],\n            });\n        }\n    }\n</script>\n\n<details class=\"shop\">\n    <summary class=\"shop-title\"><h2 class=\"label\">Shop</h2></summary>\n\n    <button\n        class=\"buy-upgrade\"\n        on:click={buyGardenPlot}\n        disabled={points < GARDEN_PLOT_COST}\n    >\n        +1 Garden Plot ({GARDEN_PLOT_COST} points)\n    </button>\n\n    <button\n        class=\"buy-upgrade\"\n        on:click={buyTeapot}\n        disabled={points < TEAPOT_COST}\n    >\n        +1 Teapot ({TEAPOT_COST} points)\n    </button>\n\n    <h3 class=\"label\">Hire Sprites</h3>\n    {#each Object.entries(SPRITE_COSTS) as [type, cost]}\n        <button\n            class=\"hire-sprite\"\n            on:click={() => hireSprite(type)}\n            disabled={points < cost}\n        >\n            {type} Sprite ({cost} points)\n        </button>\n    {/each}\n</details>\n", "<script>\n    import { TIMINGS } from \"../config.js\";\n    import GardenPlot from \"./GardenPlot.svelte\";\n    import Teapot from \"./Teapot.svelte\";\n    import Shop from \"./Shop.svelte\";\n    import { onMount, onDestroy } from \"svelte\";\n    import { createEventDispatcher } from \"svelte\";\n    const dispatch = createEventDispatcher();\n\n    let harvestedPlants = 0;\n    let brewedTea = 0;\n    let servedTea = 0;\n    let points = 0;\n    let gardenPlots = 1;\n    let teapots = 1;\n    let automationIntervals = [];\n\n    let toasts = [];\n    let toastId = 0;\n\n    let sprites = {\n        garden: 0,\n        harvest: 0,\n        brewmaster: 0,\n        cafe: 0,\n    };\n\n    let workingSprites = {\n        garden: 0,\n        harvest: 0,\n        brewmaster: 0,\n        cafe: 0,\n    };\n\n    // References to components that need automation\n    let plotRefs = [];\n    let teapotRefs = [];\n\n    // Make arrays reactive to component count changes\n    $: {\n        plotRefs = [...Array(gardenPlots)].map((_, i) => plotRefs[i] || null);\n        console.log(\"Updated plotRefs:\", plotRefs);\n    }\n\n    $: {\n        teapotRefs = [...Array(teapots)].map((_, i) => teapotRefs[i] || null);\n        console.log(\"Updated teapotRefs:\", teapotRefs);\n    }\n\n    function createToast() {\n        const id = toastId++;\n        const x = Math.random() * 40 - 20; // Random x position offset\n        const toast = {\n            id,\n            x,\n            y: 0,\n            opacity: 1,\n            points: 5,\n        };\n        toasts = [...toasts, toast];\n\n        // Remove the toast after animation\n        setTimeout(() => {\n            toasts = toasts.filter((t) => t.id !== id);\n        }, 2000);\n    }\n\n    function serveTea() {\n        if (brewedTea >= 1) {\n            brewedTea -= 1;\n            servedTea += 1;\n            points += 5;\n            dispatch(\"teaServed\");\n            createToast();\n        }\n    }\n\n    function handlePurchase(event) {\n        const { item, cost, spriteType } = event.detail;\n        console.log(\"Purchase:\", { item, cost, spriteType });\n\n        if (item === \"gardenPlot\") {\n            gardenPlots += 1;\n            points -= cost;\n        } else if (item === \"teapot\") {\n            teapots += 1;\n            points -= cost;\n        } else if (item === \"sprite\") {\n            sprites[spriteType] += 1;\n            points -= cost;\n            console.log(\"Updated sprites:\", sprites);\n            startAutomation();\n        }\n    }\n\n    function handlePlantComplete() {\n        harvestedPlants += 2;\n    }\n\n    function handleHarvestedTea() {\n        harvestedPlants -= 1;\n    }\n\n    function handleBrewedTea() {\n        brewedTea += 1;\n    }\n\n    function startAutomation() {\n        console.log(\"Starting automation\");\n        console.log(\"Current sprites:\", sprites);\n        console.log(\"Total plots:\", gardenPlots);\n        console.log(\"Total teapots:\", teapots);\n        console.log(\"plotRefs length:\", plotRefs.length);\n        console.log(\"teapotRefs length:\", teapotRefs.length);\n        console.log(\"Full plotRefs array:\", plotRefs);\n        console.log(\"Full teapotRefs array:\", teapotRefs);\n\n        // Clear existing intervals\n        automationIntervals.forEach((interval) => clearInterval(interval));\n        automationIntervals = [];\n\n        // Harvest Sprites\n        if (sprites.harvest > 0) {\n            const interval = setInterval(() => {\n                if (workingSprites.harvest < sprites.harvest) {\n                    for (let i = 0; i < plotRefs.length; i++) {\n                        const plot = plotRefs[i];\n                        if (plot) {\n                            const state = plot.getState();\n                            if (state.readyToHarvest) {\n                                workingSprites.harvest += 1;\n                                plot.harvest();\n                                // Harvesting is instant, but add a small cooldown\n                                setTimeout(() => {\n                                    workingSprites.harvest -= 1;\n                                }, TIMINGS.HARVEST_COOLDOWN);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }, 1000);\n            automationIntervals.push(interval);\n        }\n        // Brewmaster Sprites\n        if (sprites.brewmaster > 0) {\n            const interval = setInterval(() => {\n                if (workingSprites.brewmaster < sprites.brewmaster) {\n                    for (let i = 0; i < teapotRefs.length; i++) {\n                        const teapot = teapotRefs[i];\n                        if (teapot) {\n                            const state = teapot.getState();\n                            if (!state.isBrewing && harvestedPlants > 0) {\n                                workingSprites.brewmaster += 1;\n                                teapot.brewTea();\n                                // After brewing is done (10 seconds)\n                                setTimeout(() => {\n                                    workingSprites.brewmaster -= 1;\n                                }, TIMINGS.BREW_TIME);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }, 1000);\n            automationIntervals.push(interval);\n        }\n        // Garden Sprites\n        if (sprites.garden > 0) {\n            const interval = setInterval(() => {\n                if (workingSprites.garden < sprites.garden) {\n                    for (let i = 0; i < plotRefs.length; i++) {\n                        const plot = plotRefs[i];\n                        if (plot) {\n                            const state = plot.getState();\n                            if (!state.isGrowing && !state.readyToHarvest) {\n                                workingSprites.garden += 1;\n                                plot.plantTea();\n                                setTimeout(() => {\n                                    workingSprites.garden -= 1;\n                                }, TIMINGS.GARDEN_COOLDOWN);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }, 1000);\n            automationIntervals.push(interval);\n        }\n        // Cafe Sprites\n        if (sprites.cafe > 0) {\n            const interval = setInterval(() => {\n                if (workingSprites.cafe < sprites.cafe) {\n                    for (let i = 0; i < teapotRefs.length; i++) {\n                        const teapot = teapotRefs[i];\n                        if (teapot) {\n                            const state = teapot.getState();\n                            if (state.brewedTea > 0) {\n                                workingSprites.cafe += 1;\n                                serveTea();\n                                // Serving is instant, but add a small cooldown\n                                setTimeout(() => {\n                                    workingSprites.cafe -= 1;\n                                }, TIMINGS.SERVE_COOLDOWN);\n                            }\n                        }\n                    }\n                }\n            }, 1000);\n            automationIntervals.push(interval);\n        }\n    }\n\n    function saveGameState() {\n        const gameState = {\n            harvestedPlants,\n            brewedTea,\n            servedTea,\n            points,\n            gardenPlots,\n            teapots,\n            sprites,\n            plotStates: plotRefs.map((plot) => (plot ? plot.getState() : null)),\n            teapotStates: teapotRefs.map((teapot) =>\n                teapot ? teapot.getStat() : null,\n            ),\n        };\n        localStorage.setItem(\"teashopGameState\", JSON.stringify(gameState));\n        console.log(\"Game saved\");\n    }\n\n    function loadGameState() {\n        const savedState = localStorage.getItem(\"teashopGameState\");\n        if (savedState) {\n            const gameState = JSON.parse(savedState);\n            harvestedPlants = gameState.harvestedPlants;\n            brewedTea = gameState.brewedTea;\n            servedTea = gameState.servedTea;\n            points = gameState.points;\n            gardenPlots = gameState.gardenPlots;\n            teapots = gameState.teapots;\n            sprites = gameState.sprites;\n\n            setTimeout(() => {\n                gameState.plotStates.forEach((state, i) => {\n                    if (state && plotRefs[i]) {\n                        if (state.isGrowing) plotRefs[i].plantTea();\n                        if (state.readyToHarvest) {\n                            plotRefs[i].readyToHarvest = true;\n                            plotRefs[i].progress = 100;\n                        }\n                    }\n                });\n\n                gameState.teapotStates.forEach((state, i) => {\n                    if (state && teapotRefs[i]) {\n                        if (state.isBrewing) teapotRefs[i].brewTea();\n                        if (state.brewedTea > 0)\n                            teapotRefs[i].brewedTea = state.brewedTea;\n                    }\n                });\n            }, 100);\n\n            console.log(\"Games loaded\");\n        }\n    }\n\n    onMount(() => {\n        console.log(\"Component mounted\");\n        loadGameState();\n        startAutomation();\n\n        const autosaveInterval = setInterval(saveGameState, 30000); // Save every 30 seconds\n        automationIntervals.push(autosaveInterval);\n\n        // Save game state when the page is hidden (user switches tabs)\n        document.addEventListener(\"visibilitychange\", () => {\n            if (document.hidden) {\n                saveGameState();\n            }\n        });\n\n        // Save game state before the page is unloaded\n        window.addEventListener(\"beforeunload\", () => {\n            saveGameState();\n        });\n    });\n\n    onDestroy(() => {\n        automationIntervals.forEach((interval) => clearInterval(interval));\n        document.removeEventListener(\"visibilitychange\", saveGameState);\n        window.removeEventListener(\"beforeunload\", saveGameState);\n    });\n</script>\n\n<div class=\"teashop-container\">\n    <div class=\"stats\">\n        <p class=\"label\">Points: {points}</p>\n        <p class=\"label\">Plants Harvested: {harvestedPlants}</p>\n        <p class=\"label\">Tea Brewed: {brewedTea}</p>\n        <p class=\"label\">Total Cups Served: {servedTea}</p>\n    </div>\n    <div class=\"sprites\">\n        <p class=\"label\">Harvest Sprites: {sprites.harvest}</p>\n        <p class=\"label\">Brewmaster Sprites: {sprites.brewmaster}</p>\n        <p class=\"label\">Garden Sprites: {sprites.garden}</p>\n        <p class=\"label\">Cafe Sprites: {sprites.cafe}</p>\n    </div>\n    <button on:click={saveGameState}>Save Game</button>\n\n    <Shop {points} on:purchase={handlePurchase} />\n    <div class=\"teashop-garden\">\n        <h2>Garden</h2>\n        <div>\n            {#each [...Array(gardenPlots).keys()] as i (i)}\n                <GardenPlot\n                    on:plantComplete={handlePlantComplete}\n                    bind:this={plotRefs[i]}\n                    class=\"garden-plot\"\n                />\n            {/each}\n        </div>\n    </div>\n\n    <div class=\"teashop-teapots\">\n        <h2>Teapots</h2>\n        <p class=\"label\">Ready to brew: {harvestedPlants}</p>\n        <div>\n            {#each [...Array(teapots).keys()] as i (i)}\n                <Teapot\n                    {harvestedPlants}\n                    bind:this={teapotRefs[i]}\n                    on:useTea={handleHarvestedTea}\n                    on:teaBrewed={handleBrewedTea}\n                    class=\"teapot\"\n                />\n            {/each}\n        </div>\n        <div class=\"teashop-serve-container\">\n            <p class=\"label\">Ready to serve: {brewedTea}</p>\n            <div class=\"toast-container\">\n                {#each toasts as toast (toast.id)}\n                    <div\n                        class=\"toast\"\n                        style=\"\n                                    --x: {toast.x}px;\n                                    --opacity: {toast.opacity};\n                                \"\n                    >\n                        +{toast.points} points!\n                    </div>\n                {/each}\n            </div>\n            <button\n                class=\"teashop-serve\"\n                on:click={serveTea}\n                disabled={brewedTea < 1}\n            >\n                Serve Tea</button\n            >\n        </div>\n    </div>\n</div>\n", "import Teashop from \"./components/Teashop.svelte\";\nimport { mount } from \"svelte\"; // Add this import\n\nfunction initApp() {\n  console.log(\"Initializing app...\");\n  const target = document.getElementById(\"teashop\");\n  console.log(\"Target element:\", target);\n\n  if (target) {\n    try {\n      const app = mount(Teashop, {\n        target: target,\n        props: {},\n      });\n      console.log(\"Teashop app mounted successfully\");\n    } catch (error) {\n      console.error(\"Error mounting Teashop:\", error);\n    }\n  } else {\n    console.error(\"Could not find #teashop element\");\n  }\n}\n\nif (document.readyState === \"loading\") {\n  document.addEventListener(\"DOMContentLoaded\", initApp);\n} else {\n  initApp();\n}\n"],
  "mappings": "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",
  "names": ["component", "element", "stack", "stack", "prop", "source", "value", "key", "stack", "source", "effect", "derived", "bold", "normal", "bold", "normal", "html", "bold", "normal", "bold", "normal", "bold", "normal", "component", "bold", "normal", "next", "array_prototype", "index", "child", "text", "text", "effect", "derived", "effect", "effect", "component_context", "stack", "root", "index", "teardown", "child", "derived", "prop", "get", "effect", "push", "derived", "effect", "effect", "push", "teardown", "next", "transition", "child", "sibling", "get_stack", "stack", "component", "boundary", "component", "component", "component", "element", "comment", "event", "passive", "event", "html", "effect", "clone", "text", "component", "events", "passive", "unmount", "component", "fn", "state", "i", "fallback", "index", "next", "next", "element", "element", "element", "prop", "update", "props", "event", "fallback", "prop", "next", "event", "slot", "attr", "prop", "element", "$$anchor", "event", "state", "i", "$$anchor"]
}
